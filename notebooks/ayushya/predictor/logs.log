2024-07-24 20:57:57,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 20:57:57,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 20:57:57,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 20:57:57,706:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,815:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:00:53,980:INFO:PyCaret RegressionExperiment
2024-07-24 21:00:53,980:INFO:Logging name: reg-default-name
2024-07-24 21:00:53,980:INFO:ML Usecase: MLUsecase.REGRESSION
2024-07-24 21:00:53,980:INFO:version 3.3.1
2024-07-24 21:00:53,980:INFO:Initializing setup()
2024-07-24 21:00:53,980:INFO:self.USI: 805c
2024-07-24 21:00:53,980:INFO:self._variable_keys: {'log_plots_param', '_ml_usecase', 'gpu_n_jobs_param', 'USI', 'logging_param', 'X_train', 'y', 'data', 'transform_target_param', '_available_plots', 'pipeline', 'target_param', 'y_test', 'gpu_param', 'fold_generator', 'X_test', 'seed', 'y_train', 'fold_groups_param', 'memory', 'n_jobs_param', 'X', 'html_param', 'exp_name_log', 'idx', 'exp_id', 'fold_shuffle_param'}
2024-07-24 21:00:53,980:INFO:Checking environment
2024-07-24 21:00:53,980:INFO:python_version: 3.11.8
2024-07-24 21:00:53,980:INFO:python_build: ('main', 'Feb 16 2024 20:49:36')
2024-07-24 21:00:53,980:INFO:machine: arm64
2024-07-24 21:00:53,993:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-24 21:00:53,994:INFO:Memory: svmem(total=17179869184, available=4772773888, percent=72.2, used=6518161408, free=32555008, active=4750065664, inactive=4627922944, wired=1768095744)
2024-07-24 21:00:53,994:INFO:Physical Core: 8
2024-07-24 21:00:53,994:INFO:Logical Core: 8
2024-07-24 21:00:53,994:INFO:Checking libraries
2024-07-24 21:00:53,994:INFO:System:
2024-07-24 21:00:53,994:INFO:    python: 3.11.8 | packaged by conda-forge | (main, Feb 16 2024, 20:49:36) [Clang 16.0.6 ]
2024-07-24 21:00:53,994:INFO:executable: /opt/anaconda3/bin/python
2024-07-24 21:00:53,994:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-24 21:00:53,994:INFO:PyCaret required dependencies:
2024-07-24 21:00:54,247:INFO:                 pip: 23.3.1
2024-07-24 21:00:54,247:INFO:          setuptools: 68.2.2
2024-07-24 21:00:54,247:INFO:             pycaret: 3.3.1
2024-07-24 21:00:54,247:INFO:             IPython: 8.20.0
2024-07-24 21:00:54,247:INFO:          ipywidgets: 7.6.5
2024-07-24 21:00:54,247:INFO:                tqdm: 4.65.0
2024-07-24 21:00:54,247:INFO:               numpy: 1.26.4
2024-07-24 21:00:54,247:INFO:              pandas: 2.1.4
2024-07-24 21:00:54,247:INFO:              jinja2: 3.1.3
2024-07-24 21:00:54,247:INFO:               scipy: 1.11.4
2024-07-24 21:00:54,247:INFO:              joblib: 1.2.0
2024-07-24 21:00:54,247:INFO:             sklearn: 1.4.2
2024-07-24 21:00:54,247:INFO:                pyod: 1.1.3
2024-07-24 21:00:54,247:INFO:            imblearn: 0.12.2
2024-07-24 21:00:54,247:INFO:   category_encoders: 2.6.3
2024-07-24 21:00:54,247:INFO:            lightgbm: 4.3.0
2024-07-24 21:00:54,247:INFO:               numba: 0.59.0
2024-07-24 21:00:54,247:INFO:            requests: 2.31.0
2024-07-24 21:00:54,247:INFO:          matplotlib: 3.7.5
2024-07-24 21:00:54,247:INFO:          scikitplot: 0.3.7
2024-07-24 21:00:54,247:INFO:         yellowbrick: 1.5
2024-07-24 21:00:54,247:INFO:              plotly: 5.22.0
2024-07-24 21:00:54,247:INFO:    plotly-resampler: Not installed
2024-07-24 21:00:54,247:INFO:             kaleido: 0.2.1
2024-07-24 21:00:54,247:INFO:           schemdraw: 0.15
2024-07-24 21:00:54,247:INFO:         statsmodels: 0.14.0
2024-07-24 21:00:54,247:INFO:              sktime: 0.26.0
2024-07-24 21:00:54,247:INFO:               tbats: 1.1.3
2024-07-24 21:00:54,247:INFO:            pmdarima: 2.0.4
2024-07-24 21:00:54,247:INFO:              psutil: 5.9.0
2024-07-24 21:00:54,247:INFO:          markupsafe: 2.1.3
2024-07-24 21:00:54,247:INFO:             pickle5: Not installed
2024-07-24 21:00:54,247:INFO:         cloudpickle: 2.2.1
2024-07-24 21:00:54,247:INFO:         deprecation: 2.1.0
2024-07-24 21:00:54,247:INFO:              xxhash: 3.4.1
2024-07-24 21:00:54,247:INFO:           wurlitzer: 3.0.2
2024-07-24 21:00:54,247:INFO:PyCaret optional dependencies:
2024-07-24 21:00:54,263:INFO:                shap: 0.46.0
2024-07-24 21:00:54,263:INFO:           interpret: Not installed
2024-07-24 21:00:54,263:INFO:                umap: 0.5.5
2024-07-24 21:00:54,263:INFO:     ydata_profiling: Not installed
2024-07-24 21:00:54,263:INFO:  explainerdashboard: Not installed
2024-07-24 21:00:54,263:INFO:             autoviz: Not installed
2024-07-24 21:00:54,263:INFO:           fairlearn: Not installed
2024-07-24 21:00:54,263:INFO:          deepchecks: Not installed
2024-07-24 21:00:54,263:INFO:             xgboost: 2.1.0
2024-07-24 21:00:54,263:INFO:            catboost: Not installed
2024-07-24 21:00:54,263:INFO:              kmodes: Not installed
2024-07-24 21:00:54,263:INFO:             mlxtend: Not installed
2024-07-24 21:00:54,263:INFO:       statsforecast: Not installed
2024-07-24 21:00:54,263:INFO:        tune_sklearn: Not installed
2024-07-24 21:00:54,263:INFO:                 ray: Not installed
2024-07-24 21:00:54,263:INFO:            hyperopt: Not installed
2024-07-24 21:00:54,263:INFO:              optuna: Not installed
2024-07-24 21:00:54,263:INFO:               skopt: Not installed
2024-07-24 21:00:54,263:INFO:              mlflow: 2.13.0
2024-07-24 21:00:54,263:INFO:              gradio: Not installed
2024-07-24 21:00:54,263:INFO:             fastapi: Not installed
2024-07-24 21:00:54,263:INFO:             uvicorn: Not installed
2024-07-24 21:00:54,263:INFO:              m2cgen: Not installed
2024-07-24 21:00:54,263:INFO:           evidently: Not installed
2024-07-24 21:00:54,263:INFO:               fugue: Not installed
2024-07-24 21:00:54,263:INFO:           streamlit: 1.30.0
2024-07-24 21:00:54,263:INFO:             prophet: Not installed
2024-07-24 21:00:54,263:INFO:None
2024-07-24 21:00:54,263:INFO:Set up data.
2024-07-24 21:00:54,266:INFO:Set up folding strategy.
2024-07-24 21:00:54,267:INFO:Set up train/test split.
2024-07-24 21:00:54,270:INFO:Set up index.
2024-07-24 21:00:54,270:INFO:Assigning column types.
2024-07-24 21:00:54,271:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 21:00:54,271:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,273:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,275:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,298:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,315:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,315:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,316:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,316:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,318:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,319:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,342:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,359:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,359:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,360:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,360:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-07-24 21:00:54,362:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,364:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,386:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,404:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,404:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,407:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,409:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,431:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,448:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,451:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,452:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-07-24 21:00:54,456:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,478:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,496:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,496:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,501:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,523:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,541:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,541:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,542:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-07-24 21:00:54,567:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,585:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,611:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,629:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,629:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,630:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 21:00:54,656:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,673:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,700:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:00:54,717:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,718:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-07-24 21:00:54,762:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,807:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:54,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:54,809:INFO:Preparing preprocessing pipeline...
2024-07-24 21:00:54,809:INFO:Set up simple imputation.
2024-07-24 21:00:54,810:INFO:Set up encoding of ordinal features.
2024-07-24 21:00:54,811:INFO:Set up encoding of categorical features.
2024-07-24 21:00:54,811:INFO:Set up polynomial features.
2024-07-24 21:00:54,811:INFO:Set up removing multicollinearity.
2024-07-24 21:00:54,811:INFO:Set up column transformation.
2024-07-24 21:00:54,811:INFO:Set up feature normalization.
2024-07-24 21:00:54,901:INFO:Finished creating preprocessing pipeline.
2024-07-24 21:00:54,911:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-07-24 21:00:54,911:INFO:Creating final display dataframe.
2024-07-24 21:00:55,183:INFO:Setup _display_container:                     Description             Value
0                    Session id                 9
1                        Target             price
2                   Target type        Regression
3           Original data shape         (3405, 9)
4        Transformed data shape       (3405, 435)
5   Transformed train set shape       (2383, 435)
6    Transformed test set shape       (1022, 435)
7              Numeric features                 4
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19               Transformation              True
20        Transformation method       yeo-johnson
21                    Normalize              True
22             Normalize method            zscore
23               Fold Generator             KFold
24                  Fold Number                10
25                     CPU Jobs                -1
26                      Use GPU             False
27               Log Experiment             False
28              Experiment Name  reg-default-name
29                          USI              805c
2024-07-24 21:00:55,228:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:55,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:55,275:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:00:55,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:00:55,276:INFO:setup() successfully completed in 1.31s...............
2024-07-24 21:00:55,276:INFO:Initializing compare_models()
2024-07-24 21:00:55,276:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-07-24 21:00:55,276:INFO:Checking exceptions
2024-07-24 21:00:55,276:INFO:Preparing display monitor
2024-07-24 21:00:55,286:INFO:Initializing Linear Regression
2024-07-24 21:00:55,286:INFO:Total runtime is 2.400080362955729e-06 minutes
2024-07-24 21:00:55,286:INFO:SubProcess create_model() called ==================================
2024-07-24 21:00:55,286:INFO:Initializing create_model()
2024-07-24 21:00:55,286:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:00:55,286:INFO:Checking exceptions
2024-07-24 21:00:55,286:INFO:Importing libraries
2024-07-24 21:00:55,286:INFO:Copying training dataset
2024-07-24 21:00:55,288:INFO:Defining folds
2024-07-24 21:00:55,288:INFO:Declaring metric variables
2024-07-24 21:00:55,288:INFO:Importing untrained model
2024-07-24 21:00:55,288:INFO:Linear Regression Imported successfully
2024-07-24 21:00:55,289:INFO:Starting cross validation
2024-07-24 21:00:55,293:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:01,255:INFO:Calculating mean and std
2024-07-24 21:01:01,256:INFO:Creating metrics dataframe
2024-07-24 21:01:01,257:INFO:Uploading results into container
2024-07-24 21:01:01,258:INFO:Uploading model into container now
2024-07-24 21:01:01,258:INFO:_master_model_container: 1
2024-07-24 21:01:01,258:INFO:_display_container: 2
2024-07-24 21:01:01,258:INFO:LinearRegression(n_jobs=-1)
2024-07-24 21:01:01,258:INFO:create_model() successfully completed......................................
2024-07-24 21:01:01,349:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:01,349:INFO:Creating metrics dataframe
2024-07-24 21:01:01,350:INFO:Initializing Lasso Regression
2024-07-24 21:01:01,350:INFO:Total runtime is 0.10107971429824829 minutes
2024-07-24 21:01:01,351:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:01,351:INFO:Initializing create_model()
2024-07-24 21:01:01,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:01,351:INFO:Checking exceptions
2024-07-24 21:01:01,351:INFO:Importing libraries
2024-07-24 21:01:01,351:INFO:Copying training dataset
2024-07-24 21:01:01,352:INFO:Defining folds
2024-07-24 21:01:01,352:INFO:Declaring metric variables
2024-07-24 21:01:01,352:INFO:Importing untrained model
2024-07-24 21:01:01,352:INFO:Lasso Regression Imported successfully
2024-07-24 21:01:01,352:INFO:Starting cross validation
2024-07-24 21:01:01,354:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:03,247:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.273e+12, tolerance: 4.747e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,277:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.722e+12, tolerance: 4.605e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,284:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.391e+12, tolerance: 4.810e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,284:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.281e+12, tolerance: 4.722e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,313:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.203e+12, tolerance: 4.685e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,346:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.337e+12, tolerance: 4.745e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,362:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.441e+12, tolerance: 4.839e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:03,380:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.739e+12, tolerance: 4.765e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:04,711:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.429e+12, tolerance: 4.786e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:04,738:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.393e+12, tolerance: 4.891e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:01:04,762:INFO:Calculating mean and std
2024-07-24 21:01:04,762:INFO:Creating metrics dataframe
2024-07-24 21:01:04,763:INFO:Uploading results into container
2024-07-24 21:01:04,763:INFO:Uploading model into container now
2024-07-24 21:01:04,763:INFO:_master_model_container: 2
2024-07-24 21:01:04,763:INFO:_display_container: 2
2024-07-24 21:01:04,763:INFO:Lasso(random_state=9)
2024-07-24 21:01:04,764:INFO:create_model() successfully completed......................................
2024-07-24 21:01:04,811:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:04,811:INFO:Creating metrics dataframe
2024-07-24 21:01:04,812:INFO:Initializing Ridge Regression
2024-07-24 21:01:04,812:INFO:Total runtime is 0.15877833366394042 minutes
2024-07-24 21:01:04,812:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:04,813:INFO:Initializing create_model()
2024-07-24 21:01:04,813:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:04,813:INFO:Checking exceptions
2024-07-24 21:01:04,813:INFO:Importing libraries
2024-07-24 21:01:04,813:INFO:Copying training dataset
2024-07-24 21:01:04,814:INFO:Defining folds
2024-07-24 21:01:04,814:INFO:Declaring metric variables
2024-07-24 21:01:04,814:INFO:Importing untrained model
2024-07-24 21:01:04,814:INFO:Ridge Regression Imported successfully
2024-07-24 21:01:04,814:INFO:Starting cross validation
2024-07-24 21:01:04,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:07,632:INFO:Calculating mean and std
2024-07-24 21:01:07,632:INFO:Creating metrics dataframe
2024-07-24 21:01:07,633:INFO:Uploading results into container
2024-07-24 21:01:07,633:INFO:Uploading model into container now
2024-07-24 21:01:07,633:INFO:_master_model_container: 3
2024-07-24 21:01:07,633:INFO:_display_container: 2
2024-07-24 21:01:07,633:INFO:Ridge(random_state=9)
2024-07-24 21:01:07,633:INFO:create_model() successfully completed......................................
2024-07-24 21:01:07,684:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:07,684:INFO:Creating metrics dataframe
2024-07-24 21:01:07,685:INFO:Initializing Elastic Net
2024-07-24 21:01:07,685:INFO:Total runtime is 0.20665841499964396 minutes
2024-07-24 21:01:07,685:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:07,685:INFO:Initializing create_model()
2024-07-24 21:01:07,685:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:07,685:INFO:Checking exceptions
2024-07-24 21:01:07,685:INFO:Importing libraries
2024-07-24 21:01:07,685:INFO:Copying training dataset
2024-07-24 21:01:07,687:INFO:Defining folds
2024-07-24 21:01:07,687:INFO:Declaring metric variables
2024-07-24 21:01:07,687:INFO:Importing untrained model
2024-07-24 21:01:07,687:INFO:Elastic Net Imported successfully
2024-07-24 21:01:07,687:INFO:Starting cross validation
2024-07-24 21:01:07,688:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:10,503:INFO:Calculating mean and std
2024-07-24 21:01:10,503:INFO:Creating metrics dataframe
2024-07-24 21:01:10,504:INFO:Uploading results into container
2024-07-24 21:01:10,504:INFO:Uploading model into container now
2024-07-24 21:01:10,504:INFO:_master_model_container: 4
2024-07-24 21:01:10,504:INFO:_display_container: 2
2024-07-24 21:01:10,504:INFO:ElasticNet(random_state=9)
2024-07-24 21:01:10,504:INFO:create_model() successfully completed......................................
2024-07-24 21:01:10,552:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:10,552:INFO:Creating metrics dataframe
2024-07-24 21:01:10,553:INFO:Initializing Least Angle Regression
2024-07-24 21:01:10,553:INFO:Total runtime is 0.2544510801633199 minutes
2024-07-24 21:01:10,553:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:10,553:INFO:Initializing create_model()
2024-07-24 21:01:10,553:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:10,553:INFO:Checking exceptions
2024-07-24 21:01:10,553:INFO:Importing libraries
2024-07-24 21:01:10,553:INFO:Copying training dataset
2024-07-24 21:01:10,554:INFO:Defining folds
2024-07-24 21:01:10,554:INFO:Declaring metric variables
2024-07-24 21:01:10,554:INFO:Importing untrained model
2024-07-24 21:01:10,554:INFO:Least Angle Regression Imported successfully
2024-07-24 21:01:10,554:INFO:Starting cross validation
2024-07-24 21:01:10,556:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:13,456:INFO:Calculating mean and std
2024-07-24 21:01:13,457:INFO:Creating metrics dataframe
2024-07-24 21:01:13,458:INFO:Uploading results into container
2024-07-24 21:01:13,458:INFO:Uploading model into container now
2024-07-24 21:01:13,458:INFO:_master_model_container: 5
2024-07-24 21:01:13,458:INFO:_display_container: 2
2024-07-24 21:01:13,458:INFO:Lars(random_state=9)
2024-07-24 21:01:13,458:INFO:create_model() successfully completed......................................
2024-07-24 21:01:13,505:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:13,506:INFO:Creating metrics dataframe
2024-07-24 21:01:13,506:INFO:Initializing Lasso Least Angle Regression
2024-07-24 21:01:13,506:INFO:Total runtime is 0.30367987950642905 minutes
2024-07-24 21:01:13,507:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:13,507:INFO:Initializing create_model()
2024-07-24 21:01:13,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:13,507:INFO:Checking exceptions
2024-07-24 21:01:13,507:INFO:Importing libraries
2024-07-24 21:01:13,507:INFO:Copying training dataset
2024-07-24 21:01:13,508:INFO:Defining folds
2024-07-24 21:01:13,508:INFO:Declaring metric variables
2024-07-24 21:01:13,508:INFO:Importing untrained model
2024-07-24 21:01:13,508:INFO:Lasso Least Angle Regression Imported successfully
2024-07-24 21:01:13,508:INFO:Starting cross validation
2024-07-24 21:01:13,509:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:16,342:INFO:Calculating mean and std
2024-07-24 21:01:16,342:INFO:Creating metrics dataframe
2024-07-24 21:01:16,343:INFO:Uploading results into container
2024-07-24 21:01:16,343:INFO:Uploading model into container now
2024-07-24 21:01:16,343:INFO:_master_model_container: 6
2024-07-24 21:01:16,343:INFO:_display_container: 2
2024-07-24 21:01:16,343:INFO:LassoLars(random_state=9)
2024-07-24 21:01:16,343:INFO:create_model() successfully completed......................................
2024-07-24 21:01:16,390:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:16,390:INFO:Creating metrics dataframe
2024-07-24 21:01:16,391:INFO:Initializing Orthogonal Matching Pursuit
2024-07-24 21:01:16,391:INFO:Total runtime is 0.35176276365915937 minutes
2024-07-24 21:01:16,391:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:16,392:INFO:Initializing create_model()
2024-07-24 21:01:16,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:16,392:INFO:Checking exceptions
2024-07-24 21:01:16,392:INFO:Importing libraries
2024-07-24 21:01:16,392:INFO:Copying training dataset
2024-07-24 21:01:16,393:INFO:Defining folds
2024-07-24 21:01:16,393:INFO:Declaring metric variables
2024-07-24 21:01:16,393:INFO:Importing untrained model
2024-07-24 21:01:16,393:INFO:Orthogonal Matching Pursuit Imported successfully
2024-07-24 21:01:16,393:INFO:Starting cross validation
2024-07-24 21:01:16,394:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:19,196:INFO:Calculating mean and std
2024-07-24 21:01:19,196:INFO:Creating metrics dataframe
2024-07-24 21:01:19,197:INFO:Uploading results into container
2024-07-24 21:01:19,197:INFO:Uploading model into container now
2024-07-24 21:01:19,197:INFO:_master_model_container: 7
2024-07-24 21:01:19,197:INFO:_display_container: 2
2024-07-24 21:01:19,198:INFO:OrthogonalMatchingPursuit()
2024-07-24 21:01:19,198:INFO:create_model() successfully completed......................................
2024-07-24 21:01:19,278:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:19,278:INFO:Creating metrics dataframe
2024-07-24 21:01:19,279:INFO:Initializing Bayesian Ridge
2024-07-24 21:01:19,279:INFO:Total runtime is 0.39988428354263306 minutes
2024-07-24 21:01:19,279:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:19,279:INFO:Initializing create_model()
2024-07-24 21:01:19,279:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:19,279:INFO:Checking exceptions
2024-07-24 21:01:19,279:INFO:Importing libraries
2024-07-24 21:01:19,279:INFO:Copying training dataset
2024-07-24 21:01:19,280:INFO:Defining folds
2024-07-24 21:01:19,280:INFO:Declaring metric variables
2024-07-24 21:01:19,280:INFO:Importing untrained model
2024-07-24 21:01:19,280:INFO:Bayesian Ridge Imported successfully
2024-07-24 21:01:19,280:INFO:Starting cross validation
2024-07-24 21:01:19,282:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:22,318:INFO:Calculating mean and std
2024-07-24 21:01:22,319:INFO:Creating metrics dataframe
2024-07-24 21:01:22,320:INFO:Uploading results into container
2024-07-24 21:01:22,320:INFO:Uploading model into container now
2024-07-24 21:01:22,320:INFO:_master_model_container: 8
2024-07-24 21:01:22,320:INFO:_display_container: 2
2024-07-24 21:01:22,321:INFO:BayesianRidge()
2024-07-24 21:01:22,321:INFO:create_model() successfully completed......................................
2024-07-24 21:01:22,370:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:22,370:INFO:Creating metrics dataframe
2024-07-24 21:01:22,372:INFO:Initializing Passive Aggressive Regressor
2024-07-24 21:01:22,372:INFO:Total runtime is 0.45143106778462727 minutes
2024-07-24 21:01:22,372:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:22,372:INFO:Initializing create_model()
2024-07-24 21:01:22,372:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:22,372:INFO:Checking exceptions
2024-07-24 21:01:22,372:INFO:Importing libraries
2024-07-24 21:01:22,372:INFO:Copying training dataset
2024-07-24 21:01:22,373:INFO:Defining folds
2024-07-24 21:01:22,373:INFO:Declaring metric variables
2024-07-24 21:01:22,373:INFO:Importing untrained model
2024-07-24 21:01:22,373:INFO:Passive Aggressive Regressor Imported successfully
2024-07-24 21:01:22,373:INFO:Starting cross validation
2024-07-24 21:01:22,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:28,542:INFO:Calculating mean and std
2024-07-24 21:01:28,543:INFO:Creating metrics dataframe
2024-07-24 21:01:28,544:INFO:Uploading results into container
2024-07-24 21:01:28,544:INFO:Uploading model into container now
2024-07-24 21:01:28,544:INFO:_master_model_container: 9
2024-07-24 21:01:28,544:INFO:_display_container: 2
2024-07-24 21:01:28,545:INFO:PassiveAggressiveRegressor(random_state=9)
2024-07-24 21:01:28,545:INFO:create_model() successfully completed......................................
2024-07-24 21:01:28,597:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:28,597:INFO:Creating metrics dataframe
2024-07-24 21:01:28,598:INFO:Initializing Huber Regressor
2024-07-24 21:01:28,598:INFO:Total runtime is 0.5552014350891114 minutes
2024-07-24 21:01:28,598:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:28,598:INFO:Initializing create_model()
2024-07-24 21:01:28,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:28,598:INFO:Checking exceptions
2024-07-24 21:01:28,598:INFO:Importing libraries
2024-07-24 21:01:28,598:INFO:Copying training dataset
2024-07-24 21:01:28,599:INFO:Defining folds
2024-07-24 21:01:28,599:INFO:Declaring metric variables
2024-07-24 21:01:28,599:INFO:Importing untrained model
2024-07-24 21:01:28,599:INFO:Huber Regressor Imported successfully
2024-07-24 21:01:28,599:INFO:Starting cross validation
2024-07-24 21:01:28,601:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:30,789:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:30,837:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:30,861:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:30,979:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:30,987:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:31,004:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:31,025:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:31,026:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:32,286:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:32,328:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-07-24 21:01:32,351:INFO:Calculating mean and std
2024-07-24 21:01:32,351:INFO:Creating metrics dataframe
2024-07-24 21:01:32,352:INFO:Uploading results into container
2024-07-24 21:01:32,352:INFO:Uploading model into container now
2024-07-24 21:01:32,352:INFO:_master_model_container: 10
2024-07-24 21:01:32,352:INFO:_display_container: 2
2024-07-24 21:01:32,352:INFO:HuberRegressor()
2024-07-24 21:01:32,352:INFO:create_model() successfully completed......................................
2024-07-24 21:01:32,401:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:32,401:INFO:Creating metrics dataframe
2024-07-24 21:01:32,402:INFO:Initializing K Neighbors Regressor
2024-07-24 21:01:32,402:INFO:Total runtime is 0.6186015168825786 minutes
2024-07-24 21:01:32,402:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:32,402:INFO:Initializing create_model()
2024-07-24 21:01:32,402:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:32,402:INFO:Checking exceptions
2024-07-24 21:01:32,402:INFO:Importing libraries
2024-07-24 21:01:32,402:INFO:Copying training dataset
2024-07-24 21:01:32,403:INFO:Defining folds
2024-07-24 21:01:32,403:INFO:Declaring metric variables
2024-07-24 21:01:32,403:INFO:Importing untrained model
2024-07-24 21:01:32,403:INFO:K Neighbors Regressor Imported successfully
2024-07-24 21:01:32,403:INFO:Starting cross validation
2024-07-24 21:01:32,405:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:35,210:INFO:Calculating mean and std
2024-07-24 21:01:35,211:INFO:Creating metrics dataframe
2024-07-24 21:01:35,211:INFO:Uploading results into container
2024-07-24 21:01:35,212:INFO:Uploading model into container now
2024-07-24 21:01:35,212:INFO:_master_model_container: 11
2024-07-24 21:01:35,212:INFO:_display_container: 2
2024-07-24 21:01:35,212:INFO:KNeighborsRegressor(n_jobs=-1)
2024-07-24 21:01:35,212:INFO:create_model() successfully completed......................................
2024-07-24 21:01:35,293:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:35,293:INFO:Creating metrics dataframe
2024-07-24 21:01:35,294:INFO:Initializing Decision Tree Regressor
2024-07-24 21:01:35,294:INFO:Total runtime is 0.6668078978856405 minutes
2024-07-24 21:01:35,294:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:35,294:INFO:Initializing create_model()
2024-07-24 21:01:35,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:35,294:INFO:Checking exceptions
2024-07-24 21:01:35,294:INFO:Importing libraries
2024-07-24 21:01:35,294:INFO:Copying training dataset
2024-07-24 21:01:35,296:INFO:Defining folds
2024-07-24 21:01:35,296:INFO:Declaring metric variables
2024-07-24 21:01:35,296:INFO:Importing untrained model
2024-07-24 21:01:35,296:INFO:Decision Tree Regressor Imported successfully
2024-07-24 21:01:35,296:INFO:Starting cross validation
2024-07-24 21:01:35,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:38,136:INFO:Calculating mean and std
2024-07-24 21:01:38,136:INFO:Creating metrics dataframe
2024-07-24 21:01:38,137:INFO:Uploading results into container
2024-07-24 21:01:38,137:INFO:Uploading model into container now
2024-07-24 21:01:38,137:INFO:_master_model_container: 12
2024-07-24 21:01:38,137:INFO:_display_container: 2
2024-07-24 21:01:38,138:INFO:DecisionTreeRegressor(random_state=9)
2024-07-24 21:01:38,138:INFO:create_model() successfully completed......................................
2024-07-24 21:01:38,186:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:38,186:INFO:Creating metrics dataframe
2024-07-24 21:01:38,187:INFO:Initializing Random Forest Regressor
2024-07-24 21:01:38,187:INFO:Total runtime is 0.7150194327036541 minutes
2024-07-24 21:01:38,187:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:38,187:INFO:Initializing create_model()
2024-07-24 21:01:38,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:38,187:INFO:Checking exceptions
2024-07-24 21:01:38,187:INFO:Importing libraries
2024-07-24 21:01:38,187:INFO:Copying training dataset
2024-07-24 21:01:38,188:INFO:Defining folds
2024-07-24 21:01:38,188:INFO:Declaring metric variables
2024-07-24 21:01:38,188:INFO:Importing untrained model
2024-07-24 21:01:38,189:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:01:38,189:INFO:Starting cross validation
2024-07-24 21:01:38,190:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:43,098:INFO:Calculating mean and std
2024-07-24 21:01:43,098:INFO:Creating metrics dataframe
2024-07-24 21:01:43,099:INFO:Uploading results into container
2024-07-24 21:01:43,099:INFO:Uploading model into container now
2024-07-24 21:01:43,099:INFO:_master_model_container: 13
2024-07-24 21:01:43,099:INFO:_display_container: 2
2024-07-24 21:01:43,099:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:01:43,099:INFO:create_model() successfully completed......................................
2024-07-24 21:01:43,147:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:43,147:INFO:Creating metrics dataframe
2024-07-24 21:01:43,148:INFO:Initializing Extra Trees Regressor
2024-07-24 21:01:43,148:INFO:Total runtime is 0.7977117657661439 minutes
2024-07-24 21:01:43,148:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:43,149:INFO:Initializing create_model()
2024-07-24 21:01:43,149:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:43,149:INFO:Checking exceptions
2024-07-24 21:01:43,149:INFO:Importing libraries
2024-07-24 21:01:43,149:INFO:Copying training dataset
2024-07-24 21:01:43,150:INFO:Defining folds
2024-07-24 21:01:43,150:INFO:Declaring metric variables
2024-07-24 21:01:43,150:INFO:Importing untrained model
2024-07-24 21:01:43,150:INFO:Extra Trees Regressor Imported successfully
2024-07-24 21:01:43,150:INFO:Starting cross validation
2024-07-24 21:01:43,151:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:47,729:INFO:Calculating mean and std
2024-07-24 21:01:47,729:INFO:Creating metrics dataframe
2024-07-24 21:01:47,730:INFO:Uploading results into container
2024-07-24 21:01:47,730:INFO:Uploading model into container now
2024-07-24 21:01:47,730:INFO:_master_model_container: 14
2024-07-24 21:01:47,730:INFO:_display_container: 2
2024-07-24 21:01:47,730:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:01:47,730:INFO:create_model() successfully completed......................................
2024-07-24 21:01:47,778:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:47,778:INFO:Creating metrics dataframe
2024-07-24 21:01:47,779:INFO:Initializing AdaBoost Regressor
2024-07-24 21:01:47,779:INFO:Total runtime is 0.8748949170112611 minutes
2024-07-24 21:01:47,779:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:47,780:INFO:Initializing create_model()
2024-07-24 21:01:47,780:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:47,780:INFO:Checking exceptions
2024-07-24 21:01:47,780:INFO:Importing libraries
2024-07-24 21:01:47,780:INFO:Copying training dataset
2024-07-24 21:01:47,781:INFO:Defining folds
2024-07-24 21:01:47,781:INFO:Declaring metric variables
2024-07-24 21:01:47,781:INFO:Importing untrained model
2024-07-24 21:01:47,781:INFO:AdaBoost Regressor Imported successfully
2024-07-24 21:01:47,781:INFO:Starting cross validation
2024-07-24 21:01:47,783:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:51,479:INFO:Calculating mean and std
2024-07-24 21:01:51,479:INFO:Creating metrics dataframe
2024-07-24 21:01:51,480:INFO:Uploading results into container
2024-07-24 21:01:51,480:INFO:Uploading model into container now
2024-07-24 21:01:51,480:INFO:_master_model_container: 15
2024-07-24 21:01:51,480:INFO:_display_container: 2
2024-07-24 21:01:51,480:INFO:AdaBoostRegressor(random_state=9)
2024-07-24 21:01:51,480:INFO:create_model() successfully completed......................................
2024-07-24 21:01:51,528:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:51,528:INFO:Creating metrics dataframe
2024-07-24 21:01:51,529:INFO:Initializing Gradient Boosting Regressor
2024-07-24 21:01:51,529:INFO:Total runtime is 0.9373890121777854 minutes
2024-07-24 21:01:51,529:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:51,529:INFO:Initializing create_model()
2024-07-24 21:01:51,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:51,529:INFO:Checking exceptions
2024-07-24 21:01:51,529:INFO:Importing libraries
2024-07-24 21:01:51,529:INFO:Copying training dataset
2024-07-24 21:01:51,530:INFO:Defining folds
2024-07-24 21:01:51,530:INFO:Declaring metric variables
2024-07-24 21:01:51,531:INFO:Importing untrained model
2024-07-24 21:01:51,531:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:01:51,531:INFO:Starting cross validation
2024-07-24 21:01:51,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:55,327:INFO:Calculating mean and std
2024-07-24 21:01:55,328:INFO:Creating metrics dataframe
2024-07-24 21:01:55,328:INFO:Uploading results into container
2024-07-24 21:01:55,329:INFO:Uploading model into container now
2024-07-24 21:01:55,329:INFO:_master_model_container: 16
2024-07-24 21:01:55,329:INFO:_display_container: 2
2024-07-24 21:01:55,329:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:01:55,329:INFO:create_model() successfully completed......................................
2024-07-24 21:01:55,378:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:55,378:INFO:Creating metrics dataframe
2024-07-24 21:01:55,379:INFO:Initializing Extreme Gradient Boosting
2024-07-24 21:01:55,379:INFO:Total runtime is 1.0015502810478212 minutes
2024-07-24 21:01:55,379:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:55,379:INFO:Initializing create_model()
2024-07-24 21:01:55,379:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:55,379:INFO:Checking exceptions
2024-07-24 21:01:55,379:INFO:Importing libraries
2024-07-24 21:01:55,379:INFO:Copying training dataset
2024-07-24 21:01:55,380:INFO:Defining folds
2024-07-24 21:01:55,380:INFO:Declaring metric variables
2024-07-24 21:01:55,380:INFO:Importing untrained model
2024-07-24 21:01:55,381:INFO:Extreme Gradient Boosting Imported successfully
2024-07-24 21:01:55,381:INFO:Starting cross validation
2024-07-24 21:01:55,382:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:01:58,938:INFO:Calculating mean and std
2024-07-24 21:01:58,938:INFO:Creating metrics dataframe
2024-07-24 21:01:58,939:INFO:Uploading results into container
2024-07-24 21:01:58,939:INFO:Uploading model into container now
2024-07-24 21:01:58,939:INFO:_master_model_container: 17
2024-07-24 21:01:58,939:INFO:_display_container: 2
2024-07-24 21:01:58,940:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)
2024-07-24 21:01:58,940:INFO:create_model() successfully completed......................................
2024-07-24 21:01:58,991:INFO:SubProcess create_model() end ==================================
2024-07-24 21:01:58,991:INFO:Creating metrics dataframe
2024-07-24 21:01:58,992:INFO:Initializing Light Gradient Boosting Machine
2024-07-24 21:01:58,992:INFO:Total runtime is 1.0617642958958946 minutes
2024-07-24 21:01:58,992:INFO:SubProcess create_model() called ==================================
2024-07-24 21:01:58,992:INFO:Initializing create_model()
2024-07-24 21:01:58,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:01:58,992:INFO:Checking exceptions
2024-07-24 21:01:58,992:INFO:Importing libraries
2024-07-24 21:01:58,992:INFO:Copying training dataset
2024-07-24 21:01:58,993:INFO:Defining folds
2024-07-24 21:01:58,993:INFO:Declaring metric variables
2024-07-24 21:01:58,993:INFO:Importing untrained model
2024-07-24 21:01:58,993:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 21:01:58,993:INFO:Starting cross validation
2024-07-24 21:01:58,995:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:04,428:INFO:Calculating mean and std
2024-07-24 21:02:04,428:INFO:Creating metrics dataframe
2024-07-24 21:02:04,429:INFO:Uploading results into container
2024-07-24 21:02:04,429:INFO:Uploading model into container now
2024-07-24 21:02:04,429:INFO:_master_model_container: 18
2024-07-24 21:02:04,429:INFO:_display_container: 2
2024-07-24 21:02:04,429:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:02:04,429:INFO:create_model() successfully completed......................................
2024-07-24 21:02:04,479:INFO:SubProcess create_model() end ==================================
2024-07-24 21:02:04,479:INFO:Creating metrics dataframe
2024-07-24 21:02:04,480:INFO:Initializing Dummy Regressor
2024-07-24 21:02:04,480:INFO:Total runtime is 1.1532424171765647 minutes
2024-07-24 21:02:04,480:INFO:SubProcess create_model() called ==================================
2024-07-24 21:02:04,480:INFO:Initializing create_model()
2024-07-24 21:02:04,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162aca490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:04,480:INFO:Checking exceptions
2024-07-24 21:02:04,480:INFO:Importing libraries
2024-07-24 21:02:04,480:INFO:Copying training dataset
2024-07-24 21:02:04,482:INFO:Defining folds
2024-07-24 21:02:04,482:INFO:Declaring metric variables
2024-07-24 21:02:04,482:INFO:Importing untrained model
2024-07-24 21:02:04,482:INFO:Dummy Regressor Imported successfully
2024-07-24 21:02:04,482:INFO:Starting cross validation
2024-07-24 21:02:04,483:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:07,261:INFO:Calculating mean and std
2024-07-24 21:02:07,262:INFO:Creating metrics dataframe
2024-07-24 21:02:07,262:INFO:Uploading results into container
2024-07-24 21:02:07,263:INFO:Uploading model into container now
2024-07-24 21:02:07,263:INFO:_master_model_container: 19
2024-07-24 21:02:07,263:INFO:_display_container: 2
2024-07-24 21:02:07,263:INFO:DummyRegressor()
2024-07-24 21:02:07,263:INFO:create_model() successfully completed......................................
2024-07-24 21:02:07,311:INFO:SubProcess create_model() end ==================================
2024-07-24 21:02:07,311:INFO:Creating metrics dataframe
2024-07-24 21:02:07,317:WARNING:/opt/anaconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-24 21:02:07,318:INFO:Initializing create_model()
2024-07-24 21:02:07,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=LGBMRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:07,318:INFO:Checking exceptions
2024-07-24 21:02:07,318:INFO:Importing libraries
2024-07-24 21:02:07,318:INFO:Copying training dataset
2024-07-24 21:02:07,319:INFO:Defining folds
2024-07-24 21:02:07,319:INFO:Declaring metric variables
2024-07-24 21:02:07,319:INFO:Importing untrained model
2024-07-24 21:02:07,319:INFO:Declaring custom model
2024-07-24 21:02:07,320:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 21:02:07,321:INFO:Cross validation set to False
2024-07-24 21:02:07,321:INFO:Fitting Model
2024-07-24 21:02:08,591:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-24 21:02:08,596:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001870 seconds.
2024-07-24 21:02:08,596:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-24 21:02:08,596:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-24 21:02:08,596:INFO:[LightGBM] [Info] Total Bins 1669
2024-07-24 21:02:08,596:INFO:[LightGBM] [Info] Number of data points in the train set: 2383, number of used features: 63
2024-07-24 21:02:08,596:INFO:[LightGBM] [Info] Start training from score 240989.002518
2024-07-24 21:02:08,882:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:02:08,882:INFO:create_model() successfully completed......................................
2024-07-24 21:02:08,928:INFO:Initializing create_model()
2024-07-24 21:02:08,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:08,928:INFO:Checking exceptions
2024-07-24 21:02:08,928:INFO:Importing libraries
2024-07-24 21:02:08,928:INFO:Copying training dataset
2024-07-24 21:02:08,930:INFO:Defining folds
2024-07-24 21:02:08,930:INFO:Declaring metric variables
2024-07-24 21:02:08,930:INFO:Importing untrained model
2024-07-24 21:02:08,930:INFO:Declaring custom model
2024-07-24 21:02:08,930:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:02:08,931:INFO:Cross validation set to False
2024-07-24 21:02:08,931:INFO:Fitting Model
2024-07-24 21:02:10,416:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:02:10,417:INFO:create_model() successfully completed......................................
2024-07-24 21:02:10,463:INFO:Initializing create_model()
2024-07-24 21:02:10,463:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:10,463:INFO:Checking exceptions
2024-07-24 21:02:10,463:INFO:Importing libraries
2024-07-24 21:02:10,464:INFO:Copying training dataset
2024-07-24 21:02:10,465:INFO:Defining folds
2024-07-24 21:02:10,465:INFO:Declaring metric variables
2024-07-24 21:02:10,465:INFO:Importing untrained model
2024-07-24 21:02:10,465:INFO:Declaring custom model
2024-07-24 21:02:10,465:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:02:10,466:INFO:Cross validation set to False
2024-07-24 21:02:10,467:INFO:Fitting Model
2024-07-24 21:02:12,139:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:02:12,139:INFO:create_model() successfully completed......................................
2024-07-24 21:02:12,190:INFO:_master_model_container: 19
2024-07-24 21:02:12,190:INFO:_display_container: 2
2024-07-24 21:02:12,190:INFO:[LGBMRegressor(n_jobs=-1, random_state=9), RandomForestRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)]
2024-07-24 21:02:12,190:INFO:compare_models() successfully completed......................................
2024-07-24 21:02:12,191:INFO:Initializing stack_models()
2024-07-24 21:02:12,191:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator_list=[LGBMRegressor(n_jobs=-1, random_state=9), RandomForestRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=True, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-24 21:02:12,191:INFO:Checking exceptions
2024-07-24 21:02:12,191:INFO:Defining meta model
2024-07-24 21:02:12,192:INFO:Getting model names
2024-07-24 21:02:12,192:INFO:[('Light Gradient Boosting Machine', LGBMRegressor(n_jobs=-1, random_state=9)), ('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=9)), ('Gradient Boosting Regressor', GradientBoostingRegressor(random_state=9))]
2024-07-24 21:02:12,192:INFO:SubProcess create_model() called ==================================
2024-07-24 21:02:12,194:INFO:Initializing create_model()
2024-07-24 21:02:12,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162c42890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:12,195:INFO:Checking exceptions
2024-07-24 21:02:12,195:INFO:Importing libraries
2024-07-24 21:02:12,195:INFO:Copying training dataset
2024-07-24 21:02:12,196:INFO:Defining folds
2024-07-24 21:02:12,196:INFO:Declaring metric variables
2024-07-24 21:02:12,196:INFO:Importing untrained model
2024-07-24 21:02:12,196:INFO:Declaring custom model
2024-07-24 21:02:12,197:INFO:Stacking Regressor Imported successfully
2024-07-24 21:02:12,197:INFO:Starting cross validation
2024-07-24 21:02:12,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:42,720:INFO:Calculating mean and std
2024-07-24 21:02:42,721:INFO:Creating metrics dataframe
2024-07-24 21:02:42,723:INFO:Finalizing model
2024-07-24 21:02:47,273:INFO:Uploading results into container
2024-07-24 21:02:47,273:INFO:Uploading model into container now
2024-07-24 21:02:47,274:INFO:_master_model_container: 20
2024-07-24 21:02:47,274:INFO:_display_container: 3
2024-07-24 21:02:47,277:INFO:StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-07-24 21:02:47,277:INFO:create_model() successfully completed......................................
2024-07-24 21:02:47,366:INFO:SubProcess create_model() end ==================================
2024-07-24 21:02:47,366:INFO:choose_better activated
2024-07-24 21:02:47,368:INFO:StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) result for R2 is 0.7784
2024-07-24 21:02:47,368:INFO:SubProcess create_model() called ==================================
2024-07-24 21:02:47,368:INFO:Initializing create_model()
2024-07-24 21:02:47,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=LGBMRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:47,368:INFO:Checking exceptions
2024-07-24 21:02:47,369:INFO:Importing libraries
2024-07-24 21:02:47,369:INFO:Copying training dataset
2024-07-24 21:02:47,370:INFO:Defining folds
2024-07-24 21:02:47,370:INFO:Declaring metric variables
2024-07-24 21:02:47,370:INFO:Importing untrained model
2024-07-24 21:02:47,370:INFO:Declaring custom model
2024-07-24 21:02:47,370:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 21:02:47,370:INFO:Starting cross validation
2024-07-24 21:02:47,372:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:52,760:INFO:Calculating mean and std
2024-07-24 21:02:52,761:INFO:Creating metrics dataframe
2024-07-24 21:02:52,762:INFO:Finalizing model
2024-07-24 21:02:53,997:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-07-24 21:02:54,002:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001818 seconds.
2024-07-24 21:02:54,002:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-07-24 21:02:54,002:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-07-24 21:02:54,002:INFO:[LightGBM] [Info] Total Bins 1669
2024-07-24 21:02:54,002:INFO:[LightGBM] [Info] Number of data points in the train set: 2383, number of used features: 63
2024-07-24 21:02:54,003:INFO:[LightGBM] [Info] Start training from score 240989.002518
2024-07-24 21:02:54,287:INFO:Uploading results into container
2024-07-24 21:02:54,289:INFO:Uploading model into container now
2024-07-24 21:02:54,289:INFO:_master_model_container: 21
2024-07-24 21:02:54,289:INFO:_display_container: 4
2024-07-24 21:02:54,289:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:02:54,289:INFO:create_model() successfully completed......................................
2024-07-24 21:02:54,334:INFO:SubProcess create_model() end ==================================
2024-07-24 21:02:54,334:INFO:LGBMRegressor(n_jobs=-1, random_state=9) result for R2 is 0.7736
2024-07-24 21:02:54,335:INFO:SubProcess create_model() called ==================================
2024-07-24 21:02:54,335:INFO:Initializing create_model()
2024-07-24 21:02:54,335:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:02:54,335:INFO:Checking exceptions
2024-07-24 21:02:54,335:INFO:Importing libraries
2024-07-24 21:02:54,335:INFO:Copying training dataset
2024-07-24 21:02:54,336:INFO:Defining folds
2024-07-24 21:02:54,336:INFO:Declaring metric variables
2024-07-24 21:02:54,336:INFO:Importing untrained model
2024-07-24 21:02:54,336:INFO:Declaring custom model
2024-07-24 21:02:54,337:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:02:54,337:INFO:Starting cross validation
2024-07-24 21:02:54,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:02:59,320:INFO:Calculating mean and std
2024-07-24 21:02:59,321:INFO:Creating metrics dataframe
2024-07-24 21:02:59,321:INFO:Finalizing model
2024-07-24 21:03:00,797:INFO:Uploading results into container
2024-07-24 21:03:00,797:INFO:Uploading model into container now
2024-07-24 21:03:00,798:INFO:_master_model_container: 22
2024-07-24 21:03:00,798:INFO:_display_container: 4
2024-07-24 21:03:00,798:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:00,798:INFO:create_model() successfully completed......................................
2024-07-24 21:03:00,843:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:00,843:INFO:RandomForestRegressor(n_jobs=-1, random_state=9) result for R2 is 0.7668
2024-07-24 21:03:00,843:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:00,843:INFO:Initializing create_model()
2024-07-24 21:03:00,844:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x160784a10>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:00,844:INFO:Checking exceptions
2024-07-24 21:03:00,844:INFO:Importing libraries
2024-07-24 21:03:00,844:INFO:Copying training dataset
2024-07-24 21:03:00,845:INFO:Defining folds
2024-07-24 21:03:00,845:INFO:Declaring metric variables
2024-07-24 21:03:00,845:INFO:Importing untrained model
2024-07-24 21:03:00,845:INFO:Declaring custom model
2024-07-24 21:03:00,845:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:03:00,846:INFO:Starting cross validation
2024-07-24 21:03:00,847:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:04,691:INFO:Calculating mean and std
2024-07-24 21:03:04,691:INFO:Creating metrics dataframe
2024-07-24 21:03:04,692:INFO:Finalizing model
2024-07-24 21:03:06,360:INFO:Uploading results into container
2024-07-24 21:03:06,361:INFO:Uploading model into container now
2024-07-24 21:03:06,361:INFO:_master_model_container: 23
2024-07-24 21:03:06,361:INFO:_display_container: 4
2024-07-24 21:03:06,361:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:03:06,361:INFO:create_model() successfully completed......................................
2024-07-24 21:03:06,406:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:06,406:INFO:GradientBoostingRegressor(random_state=9) result for R2 is 0.7648
2024-07-24 21:03:06,408:INFO:StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) is best model
2024-07-24 21:03:06,408:INFO:choose_better completed
2024-07-24 21:03:06,411:INFO:_master_model_container: 23
2024-07-24 21:03:06,411:INFO:_display_container: 3
2024-07-24 21:03:06,413:INFO:StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-07-24 21:03:06,413:INFO:stack_models() successfully completed......................................
2024-07-24 21:03:06,478:INFO:Initializing save_model()
2024-07-24 21:03:06,478:INFO:save_model(model=StackingRegressor(cv=5,
                  estimators=[('Light Gradient Boosting Machine',
                               LGBMRegressor(n_jobs=-1, random_state=9)),
                              ('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), model_name=best_model_small_house, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-07-24 21:03:06,478:INFO:Adding model into prep_pipe
2024-07-24 21:03:06,507:INFO:best_model_small_house.pkl saved in current working directory
2024-07-24 21:03:06,521:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))])
2024-07-24 21:03:06,521:INFO:save_model() successfully completed......................................
2024-07-24 21:03:06,587:INFO:PyCaret RegressionExperiment
2024-07-24 21:03:06,587:INFO:Logging name: reg-default-name
2024-07-24 21:03:06,588:INFO:ML Usecase: MLUsecase.REGRESSION
2024-07-24 21:03:06,588:INFO:version 3.3.1
2024-07-24 21:03:06,588:INFO:Initializing setup()
2024-07-24 21:03:06,588:INFO:self.USI: bfa0
2024-07-24 21:03:06,588:INFO:self._variable_keys: {'log_plots_param', '_ml_usecase', 'gpu_n_jobs_param', 'USI', 'logging_param', 'X_train', 'y', 'data', 'transform_target_param', '_available_plots', 'pipeline', 'target_param', 'y_test', 'gpu_param', 'fold_generator', 'X_test', 'seed', 'y_train', 'fold_groups_param', 'memory', 'n_jobs_param', 'X', 'html_param', 'exp_name_log', 'idx', 'exp_id', 'fold_shuffle_param'}
2024-07-24 21:03:06,588:INFO:Checking environment
2024-07-24 21:03:06,588:INFO:python_version: 3.11.8
2024-07-24 21:03:06,588:INFO:python_build: ('main', 'Feb 16 2024 20:49:36')
2024-07-24 21:03:06,588:INFO:machine: arm64
2024-07-24 21:03:06,588:INFO:platform: macOS-14.5-arm64-arm-64bit
2024-07-24 21:03:06,588:INFO:Memory: svmem(total=17179869184, available=3718152192, percent=78.4, used=5544443904, free=34160640, active=3693608960, inactive=3660169216, wired=1850834944)
2024-07-24 21:03:06,588:INFO:Physical Core: 8
2024-07-24 21:03:06,588:INFO:Logical Core: 8
2024-07-24 21:03:06,588:INFO:Checking libraries
2024-07-24 21:03:06,588:INFO:System:
2024-07-24 21:03:06,588:INFO:    python: 3.11.8 | packaged by conda-forge | (main, Feb 16 2024, 20:49:36) [Clang 16.0.6 ]
2024-07-24 21:03:06,588:INFO:executable: /opt/anaconda3/bin/python
2024-07-24 21:03:06,588:INFO:   machine: macOS-14.5-arm64-arm-64bit
2024-07-24 21:03:06,588:INFO:PyCaret required dependencies:
2024-07-24 21:03:06,588:INFO:                 pip: 23.3.1
2024-07-24 21:03:06,588:INFO:          setuptools: 68.2.2
2024-07-24 21:03:06,588:INFO:             pycaret: 3.3.1
2024-07-24 21:03:06,588:INFO:             IPython: 8.20.0
2024-07-24 21:03:06,588:INFO:          ipywidgets: 7.6.5
2024-07-24 21:03:06,588:INFO:                tqdm: 4.65.0
2024-07-24 21:03:06,588:INFO:               numpy: 1.26.4
2024-07-24 21:03:06,588:INFO:              pandas: 2.1.4
2024-07-24 21:03:06,588:INFO:              jinja2: 3.1.3
2024-07-24 21:03:06,588:INFO:               scipy: 1.11.4
2024-07-24 21:03:06,588:INFO:              joblib: 1.2.0
2024-07-24 21:03:06,588:INFO:             sklearn: 1.4.2
2024-07-24 21:03:06,588:INFO:                pyod: 1.1.3
2024-07-24 21:03:06,588:INFO:            imblearn: 0.12.2
2024-07-24 21:03:06,588:INFO:   category_encoders: 2.6.3
2024-07-24 21:03:06,588:INFO:            lightgbm: 4.3.0
2024-07-24 21:03:06,588:INFO:               numba: 0.59.0
2024-07-24 21:03:06,588:INFO:            requests: 2.31.0
2024-07-24 21:03:06,588:INFO:          matplotlib: 3.7.5
2024-07-24 21:03:06,588:INFO:          scikitplot: 0.3.7
2024-07-24 21:03:06,588:INFO:         yellowbrick: 1.5
2024-07-24 21:03:06,588:INFO:              plotly: 5.22.0
2024-07-24 21:03:06,588:INFO:    plotly-resampler: Not installed
2024-07-24 21:03:06,588:INFO:             kaleido: 0.2.1
2024-07-24 21:03:06,588:INFO:           schemdraw: 0.15
2024-07-24 21:03:06,588:INFO:         statsmodels: 0.14.0
2024-07-24 21:03:06,588:INFO:              sktime: 0.26.0
2024-07-24 21:03:06,588:INFO:               tbats: 1.1.3
2024-07-24 21:03:06,588:INFO:            pmdarima: 2.0.4
2024-07-24 21:03:06,588:INFO:              psutil: 5.9.0
2024-07-24 21:03:06,588:INFO:          markupsafe: 2.1.3
2024-07-24 21:03:06,588:INFO:             pickle5: Not installed
2024-07-24 21:03:06,588:INFO:         cloudpickle: 2.2.1
2024-07-24 21:03:06,588:INFO:         deprecation: 2.1.0
2024-07-24 21:03:06,588:INFO:              xxhash: 3.4.1
2024-07-24 21:03:06,588:INFO:           wurlitzer: 3.0.2
2024-07-24 21:03:06,588:INFO:PyCaret optional dependencies:
2024-07-24 21:03:06,588:INFO:                shap: 0.46.0
2024-07-24 21:03:06,588:INFO:           interpret: Not installed
2024-07-24 21:03:06,588:INFO:                umap: 0.5.5
2024-07-24 21:03:06,588:INFO:     ydata_profiling: Not installed
2024-07-24 21:03:06,588:INFO:  explainerdashboard: Not installed
2024-07-24 21:03:06,588:INFO:             autoviz: Not installed
2024-07-24 21:03:06,588:INFO:           fairlearn: Not installed
2024-07-24 21:03:06,588:INFO:          deepchecks: Not installed
2024-07-24 21:03:06,588:INFO:             xgboost: 2.1.0
2024-07-24 21:03:06,588:INFO:            catboost: Not installed
2024-07-24 21:03:06,588:INFO:              kmodes: Not installed
2024-07-24 21:03:06,588:INFO:             mlxtend: Not installed
2024-07-24 21:03:06,588:INFO:       statsforecast: Not installed
2024-07-24 21:03:06,588:INFO:        tune_sklearn: Not installed
2024-07-24 21:03:06,588:INFO:                 ray: Not installed
2024-07-24 21:03:06,588:INFO:            hyperopt: Not installed
2024-07-24 21:03:06,588:INFO:              optuna: Not installed
2024-07-24 21:03:06,588:INFO:               skopt: Not installed
2024-07-24 21:03:06,588:INFO:              mlflow: 2.13.0
2024-07-24 21:03:06,588:INFO:              gradio: Not installed
2024-07-24 21:03:06,588:INFO:             fastapi: Not installed
2024-07-24 21:03:06,588:INFO:             uvicorn: Not installed
2024-07-24 21:03:06,588:INFO:              m2cgen: Not installed
2024-07-24 21:03:06,588:INFO:           evidently: Not installed
2024-07-24 21:03:06,588:INFO:               fugue: Not installed
2024-07-24 21:03:06,588:INFO:           streamlit: 1.30.0
2024-07-24 21:03:06,588:INFO:             prophet: Not installed
2024-07-24 21:03:06,588:INFO:None
2024-07-24 21:03:06,589:INFO:Set up data.
2024-07-24 21:03:06,590:INFO:Set up folding strategy.
2024-07-24 21:03:06,591:INFO:Set up train/test split.
2024-07-24 21:03:06,592:INFO:Set up index.
2024-07-24 21:03:06,592:INFO:Assigning column types.
2024-07-24 21:03:06,593:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-24 21:03:06,593:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,595:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,597:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,619:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,637:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,637:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,638:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,640:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,642:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,664:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,681:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,682:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,683:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-07-24 21:03:06,684:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,686:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,708:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,726:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,726:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,729:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,731:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,753:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,771:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,771:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,772:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-07-24 21:03:06,776:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,798:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,816:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,816:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,821:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,843:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,860:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,861:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,862:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-07-24 21:03:06,887:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,905:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,931:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,949:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,949:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:06,950:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-24 21:03:06,975:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:06,993:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:06,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,020:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-07-24 21:03:07,038:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,039:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,039:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-07-24 21:03:07,083:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,153:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,161:INFO:Preparing preprocessing pipeline...
2024-07-24 21:03:07,161:INFO:Set up simple imputation.
2024-07-24 21:03:07,207:INFO:Set up encoding of ordinal features.
2024-07-24 21:03:07,207:INFO:Set up encoding of categorical features.
2024-07-24 21:03:07,207:INFO:Set up polynomial features.
2024-07-24 21:03:07,207:INFO:Set up removing multicollinearity.
2024-07-24 21:03:07,207:INFO:Set up column transformation.
2024-07-24 21:03:07,207:INFO:Set up feature normalization.
2024-07-24 21:03:07,541:INFO:Finished creating preprocessing pipeline.
2024-07-24 21:03:07,550:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-07-24 21:03:07,551:INFO:Creating final display dataframe.
2024-07-24 21:03:07,722:INFO:Setup _display_container:                     Description             Value
0                    Session id                 9
1                        Target             price
2                   Target type        Regression
3           Original data shape         (1189, 9)
4        Transformed data shape       (1189, 204)
5   Transformed train set shape        (832, 204)
6    Transformed test set shape        (357, 204)
7              Numeric features                 4
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15          Polynomial features              True
16            Polynomial degree                 2
17     Remove multicollinearity              True
18  Multicollinearity threshold               0.9
19               Transformation              True
20        Transformation method       yeo-johnson
21                    Normalize              True
22             Normalize method            zscore
23               Fold Generator             KFold
24                  Fold Number                10
25                     CPU Jobs                -1
26                      Use GPU             False
27               Log Experiment             False
28              Experiment Name  reg-default-name
29                          USI              bfa0
2024-07-24 21:03:07,768:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,813:INFO:Soft dependency imported: xgboost: 2.1.0
2024-07-24 21:03:07,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-24 21:03:07,814:INFO:setup() successfully completed in 1.24s...............
2024-07-24 21:03:07,814:INFO:Initializing compare_models()
2024-07-24 21:03:07,814:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-07-24 21:03:07,814:INFO:Checking exceptions
2024-07-24 21:03:07,815:INFO:Preparing display monitor
2024-07-24 21:03:07,816:INFO:Initializing Linear Regression
2024-07-24 21:03:07,816:INFO:Total runtime is 5.68230946858724e-07 minutes
2024-07-24 21:03:07,816:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:07,816:INFO:Initializing create_model()
2024-07-24 21:03:07,816:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:07,816:INFO:Checking exceptions
2024-07-24 21:03:07,816:INFO:Importing libraries
2024-07-24 21:03:07,816:INFO:Copying training dataset
2024-07-24 21:03:07,817:INFO:Defining folds
2024-07-24 21:03:07,817:INFO:Declaring metric variables
2024-07-24 21:03:07,817:INFO:Importing untrained model
2024-07-24 21:03:07,817:INFO:Linear Regression Imported successfully
2024-07-24 21:03:07,817:INFO:Starting cross validation
2024-07-24 21:03:07,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:08,416:INFO:Calculating mean and std
2024-07-24 21:03:08,416:INFO:Creating metrics dataframe
2024-07-24 21:03:08,417:INFO:Uploading results into container
2024-07-24 21:03:08,417:INFO:Uploading model into container now
2024-07-24 21:03:08,417:INFO:_master_model_container: 1
2024-07-24 21:03:08,417:INFO:_display_container: 2
2024-07-24 21:03:08,418:INFO:LinearRegression(n_jobs=-1)
2024-07-24 21:03:08,418:INFO:create_model() successfully completed......................................
2024-07-24 21:03:08,470:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:08,470:INFO:Creating metrics dataframe
2024-07-24 21:03:08,470:INFO:Initializing Lasso Regression
2024-07-24 21:03:08,471:INFO:Total runtime is 0.010916380087534585 minutes
2024-07-24 21:03:08,471:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:08,471:INFO:Initializing create_model()
2024-07-24 21:03:08,471:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:08,471:INFO:Checking exceptions
2024-07-24 21:03:08,471:INFO:Importing libraries
2024-07-24 21:03:08,471:INFO:Copying training dataset
2024-07-24 21:03:08,472:INFO:Defining folds
2024-07-24 21:03:08,472:INFO:Declaring metric variables
2024-07-24 21:03:08,472:INFO:Importing untrained model
2024-07-24 21:03:08,472:INFO:Lasso Regression Imported successfully
2024-07-24 21:03:08,472:INFO:Starting cross validation
2024-07-24 21:03:08,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:08,823:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.102e+13, tolerance: 5.075e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,828:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.130e+13, tolerance: 5.251e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,835:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.132e+13, tolerance: 5.091e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,844:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.148e+13, tolerance: 5.032e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,856:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.142e+13, tolerance: 5.079e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,866:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.134e+13, tolerance: 5.019e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,869:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.058e+13, tolerance: 4.997e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:08,888:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.139e+13, tolerance: 5.121e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:09,110:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.096e+13, tolerance: 5.163e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:09,118:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.097e+13, tolerance: 5.101e+09
  model = cd_fast.enet_coordinate_descent(

2024-07-24 21:03:09,134:INFO:Calculating mean and std
2024-07-24 21:03:09,134:INFO:Creating metrics dataframe
2024-07-24 21:03:09,135:INFO:Uploading results into container
2024-07-24 21:03:09,135:INFO:Uploading model into container now
2024-07-24 21:03:09,135:INFO:_master_model_container: 2
2024-07-24 21:03:09,135:INFO:_display_container: 2
2024-07-24 21:03:09,135:INFO:Lasso(random_state=9)
2024-07-24 21:03:09,135:INFO:create_model() successfully completed......................................
2024-07-24 21:03:09,183:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:09,184:INFO:Creating metrics dataframe
2024-07-24 21:03:09,185:INFO:Initializing Ridge Regression
2024-07-24 21:03:09,185:INFO:Total runtime is 0.02281663417816162 minutes
2024-07-24 21:03:09,185:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:09,185:INFO:Initializing create_model()
2024-07-24 21:03:09,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:09,185:INFO:Checking exceptions
2024-07-24 21:03:09,185:INFO:Importing libraries
2024-07-24 21:03:09,185:INFO:Copying training dataset
2024-07-24 21:03:09,186:INFO:Defining folds
2024-07-24 21:03:09,186:INFO:Declaring metric variables
2024-07-24 21:03:09,186:INFO:Importing untrained model
2024-07-24 21:03:09,186:INFO:Ridge Regression Imported successfully
2024-07-24 21:03:09,186:INFO:Starting cross validation
2024-07-24 21:03:09,187:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:09,741:INFO:Calculating mean and std
2024-07-24 21:03:09,741:INFO:Creating metrics dataframe
2024-07-24 21:03:09,742:INFO:Uploading results into container
2024-07-24 21:03:09,742:INFO:Uploading model into container now
2024-07-24 21:03:09,742:INFO:_master_model_container: 3
2024-07-24 21:03:09,742:INFO:_display_container: 2
2024-07-24 21:03:09,742:INFO:Ridge(random_state=9)
2024-07-24 21:03:09,742:INFO:create_model() successfully completed......................................
2024-07-24 21:03:09,791:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:09,791:INFO:Creating metrics dataframe
2024-07-24 21:03:09,792:INFO:Initializing Elastic Net
2024-07-24 21:03:09,792:INFO:Total runtime is 0.032935885588328044 minutes
2024-07-24 21:03:09,792:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:09,792:INFO:Initializing create_model()
2024-07-24 21:03:09,792:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:09,792:INFO:Checking exceptions
2024-07-24 21:03:09,792:INFO:Importing libraries
2024-07-24 21:03:09,792:INFO:Copying training dataset
2024-07-24 21:03:09,793:INFO:Defining folds
2024-07-24 21:03:09,793:INFO:Declaring metric variables
2024-07-24 21:03:09,793:INFO:Importing untrained model
2024-07-24 21:03:09,793:INFO:Elastic Net Imported successfully
2024-07-24 21:03:09,793:INFO:Starting cross validation
2024-07-24 21:03:09,794:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:10,346:INFO:Calculating mean and std
2024-07-24 21:03:10,346:INFO:Creating metrics dataframe
2024-07-24 21:03:10,347:INFO:Uploading results into container
2024-07-24 21:03:10,347:INFO:Uploading model into container now
2024-07-24 21:03:10,347:INFO:_master_model_container: 4
2024-07-24 21:03:10,347:INFO:_display_container: 2
2024-07-24 21:03:10,348:INFO:ElasticNet(random_state=9)
2024-07-24 21:03:10,348:INFO:create_model() successfully completed......................................
2024-07-24 21:03:10,396:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:10,396:INFO:Creating metrics dataframe
2024-07-24 21:03:10,397:INFO:Initializing Least Angle Regression
2024-07-24 21:03:10,397:INFO:Total runtime is 0.043017931779225665 minutes
2024-07-24 21:03:10,397:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:10,397:INFO:Initializing create_model()
2024-07-24 21:03:10,397:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:10,397:INFO:Checking exceptions
2024-07-24 21:03:10,397:INFO:Importing libraries
2024-07-24 21:03:10,397:INFO:Copying training dataset
2024-07-24 21:03:10,398:INFO:Defining folds
2024-07-24 21:03:10,398:INFO:Declaring metric variables
2024-07-24 21:03:10,398:INFO:Importing untrained model
2024-07-24 21:03:10,398:INFO:Least Angle Regression Imported successfully
2024-07-24 21:03:10,398:INFO:Starting cross validation
2024-07-24 21:03:10,399:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:10,700:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:501: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)

2024-07-24 21:03:10,700:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:501: RuntimeWarning: overflow encountered in square
  output_errors = np.average((y_true - y_pred) ** 2, axis=0, weights=sample_weight)

2024-07-24 21:03:10,701:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/metrics/_regression.py:1196: RuntimeWarning: overflow encountered in square
  numerator = (weight * (y_true - y_pred) ** 2).sum(axis=0, dtype=np.float64)

2024-07-24 21:03:10,955:INFO:Calculating mean and std
2024-07-24 21:03:10,957:WARNING:/opt/anaconda3/lib/python3.11/site-packages/numpy/core/_methods.py:176: RuntimeWarning: overflow encountered in multiply
  x = um.multiply(x, x, out=x)

2024-07-24 21:03:10,957:WARNING:/opt/anaconda3/lib/python3.11/site-packages/numpy/core/_methods.py:173: RuntimeWarning: invalid value encountered in subtract
  x = asanyarray(arr - arrmean)

2024-07-24 21:03:10,957:INFO:Creating metrics dataframe
2024-07-24 21:03:10,958:INFO:Uploading results into container
2024-07-24 21:03:10,958:INFO:Uploading model into container now
2024-07-24 21:03:10,958:INFO:_master_model_container: 5
2024-07-24 21:03:10,958:INFO:_display_container: 2
2024-07-24 21:03:10,958:INFO:Lars(random_state=9)
2024-07-24 21:03:10,958:INFO:create_model() successfully completed......................................
2024-07-24 21:03:11,007:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:11,007:INFO:Creating metrics dataframe
2024-07-24 21:03:11,008:INFO:Initializing Lasso Least Angle Regression
2024-07-24 21:03:11,008:INFO:Total runtime is 0.05321200291315714 minutes
2024-07-24 21:03:11,008:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:11,008:INFO:Initializing create_model()
2024-07-24 21:03:11,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:11,008:INFO:Checking exceptions
2024-07-24 21:03:11,008:INFO:Importing libraries
2024-07-24 21:03:11,008:INFO:Copying training dataset
2024-07-24 21:03:11,010:INFO:Defining folds
2024-07-24 21:03:11,010:INFO:Declaring metric variables
2024-07-24 21:03:11,010:INFO:Importing untrained model
2024-07-24 21:03:11,010:INFO:Lasso Least Angle Regression Imported successfully
2024-07-24 21:03:11,010:INFO:Starting cross validation
2024-07-24 21:03:11,011:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:11,603:INFO:Calculating mean and std
2024-07-24 21:03:11,603:INFO:Creating metrics dataframe
2024-07-24 21:03:11,604:INFO:Uploading results into container
2024-07-24 21:03:11,604:INFO:Uploading model into container now
2024-07-24 21:03:11,604:INFO:_master_model_container: 6
2024-07-24 21:03:11,604:INFO:_display_container: 2
2024-07-24 21:03:11,604:INFO:LassoLars(random_state=9)
2024-07-24 21:03:11,604:INFO:create_model() successfully completed......................................
2024-07-24 21:03:11,653:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:11,653:INFO:Creating metrics dataframe
2024-07-24 21:03:11,654:INFO:Initializing Orthogonal Matching Pursuit
2024-07-24 21:03:11,654:INFO:Total runtime is 0.06397038698196411 minutes
2024-07-24 21:03:11,654:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:11,654:INFO:Initializing create_model()
2024-07-24 21:03:11,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:11,654:INFO:Checking exceptions
2024-07-24 21:03:11,654:INFO:Importing libraries
2024-07-24 21:03:11,654:INFO:Copying training dataset
2024-07-24 21:03:11,655:INFO:Defining folds
2024-07-24 21:03:11,655:INFO:Declaring metric variables
2024-07-24 21:03:11,655:INFO:Importing untrained model
2024-07-24 21:03:11,655:INFO:Orthogonal Matching Pursuit Imported successfully
2024-07-24 21:03:11,655:INFO:Starting cross validation
2024-07-24 21:03:11,656:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:12,223:INFO:Calculating mean and std
2024-07-24 21:03:12,224:INFO:Creating metrics dataframe
2024-07-24 21:03:12,224:INFO:Uploading results into container
2024-07-24 21:03:12,225:INFO:Uploading model into container now
2024-07-24 21:03:12,225:INFO:_master_model_container: 7
2024-07-24 21:03:12,225:INFO:_display_container: 2
2024-07-24 21:03:12,225:INFO:OrthogonalMatchingPursuit()
2024-07-24 21:03:12,225:INFO:create_model() successfully completed......................................
2024-07-24 21:03:12,273:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:12,273:INFO:Creating metrics dataframe
2024-07-24 21:03:12,274:INFO:Initializing Bayesian Ridge
2024-07-24 21:03:12,274:INFO:Total runtime is 0.07430480321248373 minutes
2024-07-24 21:03:12,274:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:12,274:INFO:Initializing create_model()
2024-07-24 21:03:12,274:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:12,274:INFO:Checking exceptions
2024-07-24 21:03:12,274:INFO:Importing libraries
2024-07-24 21:03:12,274:INFO:Copying training dataset
2024-07-24 21:03:12,275:INFO:Defining folds
2024-07-24 21:03:12,275:INFO:Declaring metric variables
2024-07-24 21:03:12,275:INFO:Importing untrained model
2024-07-24 21:03:12,275:INFO:Bayesian Ridge Imported successfully
2024-07-24 21:03:12,275:INFO:Starting cross validation
2024-07-24 21:03:12,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:12,885:INFO:Calculating mean and std
2024-07-24 21:03:12,886:INFO:Creating metrics dataframe
2024-07-24 21:03:12,886:INFO:Uploading results into container
2024-07-24 21:03:12,887:INFO:Uploading model into container now
2024-07-24 21:03:12,887:INFO:_master_model_container: 8
2024-07-24 21:03:12,887:INFO:_display_container: 2
2024-07-24 21:03:12,887:INFO:BayesianRidge()
2024-07-24 21:03:12,887:INFO:create_model() successfully completed......................................
2024-07-24 21:03:12,938:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:12,939:INFO:Creating metrics dataframe
2024-07-24 21:03:12,939:INFO:Initializing Passive Aggressive Regressor
2024-07-24 21:03:12,940:INFO:Total runtime is 0.08539933363596598 minutes
2024-07-24 21:03:12,940:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:12,940:INFO:Initializing create_model()
2024-07-24 21:03:12,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:12,940:INFO:Checking exceptions
2024-07-24 21:03:12,940:INFO:Importing libraries
2024-07-24 21:03:12,940:INFO:Copying training dataset
2024-07-24 21:03:12,941:INFO:Defining folds
2024-07-24 21:03:12,941:INFO:Declaring metric variables
2024-07-24 21:03:12,941:INFO:Importing untrained model
2024-07-24 21:03:12,941:INFO:Passive Aggressive Regressor Imported successfully
2024-07-24 21:03:12,941:INFO:Starting cross validation
2024-07-24 21:03:12,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:13,639:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,730:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,778:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,787:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,793:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,798:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,816:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:13,825:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:14,308:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:14,374:WARNING:/opt/anaconda3/lib/python3.11/site-packages/sklearn/linear_model/_stochastic_gradient.py:1575: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2024-07-24 21:03:14,390:INFO:Calculating mean and std
2024-07-24 21:03:14,390:INFO:Creating metrics dataframe
2024-07-24 21:03:14,391:INFO:Uploading results into container
2024-07-24 21:03:14,391:INFO:Uploading model into container now
2024-07-24 21:03:14,391:INFO:_master_model_container: 9
2024-07-24 21:03:14,391:INFO:_display_container: 2
2024-07-24 21:03:14,391:INFO:PassiveAggressiveRegressor(random_state=9)
2024-07-24 21:03:14,391:INFO:create_model() successfully completed......................................
2024-07-24 21:03:14,444:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:14,444:INFO:Creating metrics dataframe
2024-07-24 21:03:14,444:INFO:Initializing Huber Regressor
2024-07-24 21:03:14,445:INFO:Total runtime is 0.11048306624094645 minutes
2024-07-24 21:03:14,445:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:14,445:INFO:Initializing create_model()
2024-07-24 21:03:14,445:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:14,445:INFO:Checking exceptions
2024-07-24 21:03:14,445:INFO:Importing libraries
2024-07-24 21:03:14,445:INFO:Copying training dataset
2024-07-24 21:03:14,446:INFO:Defining folds
2024-07-24 21:03:14,446:INFO:Declaring metric variables
2024-07-24 21:03:14,446:INFO:Importing untrained model
2024-07-24 21:03:14,446:INFO:Huber Regressor Imported successfully
2024-07-24 21:03:14,446:INFO:Starting cross validation
2024-07-24 21:03:14,447:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:15,035:INFO:Calculating mean and std
2024-07-24 21:03:15,035:INFO:Creating metrics dataframe
2024-07-24 21:03:15,036:INFO:Uploading results into container
2024-07-24 21:03:15,036:INFO:Uploading model into container now
2024-07-24 21:03:15,036:INFO:_master_model_container: 10
2024-07-24 21:03:15,036:INFO:_display_container: 2
2024-07-24 21:03:15,036:INFO:HuberRegressor()
2024-07-24 21:03:15,036:INFO:create_model() successfully completed......................................
2024-07-24 21:03:15,086:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:15,086:INFO:Creating metrics dataframe
2024-07-24 21:03:15,087:INFO:Initializing K Neighbors Regressor
2024-07-24 21:03:15,087:INFO:Total runtime is 0.12119128306706746 minutes
2024-07-24 21:03:15,087:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:15,087:INFO:Initializing create_model()
2024-07-24 21:03:15,087:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:15,087:INFO:Checking exceptions
2024-07-24 21:03:15,087:INFO:Importing libraries
2024-07-24 21:03:15,087:INFO:Copying training dataset
2024-07-24 21:03:15,088:INFO:Defining folds
2024-07-24 21:03:15,088:INFO:Declaring metric variables
2024-07-24 21:03:15,088:INFO:Importing untrained model
2024-07-24 21:03:15,089:INFO:K Neighbors Regressor Imported successfully
2024-07-24 21:03:15,089:INFO:Starting cross validation
2024-07-24 21:03:15,090:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:15,652:INFO:Calculating mean and std
2024-07-24 21:03:15,653:INFO:Creating metrics dataframe
2024-07-24 21:03:15,653:INFO:Uploading results into container
2024-07-24 21:03:15,654:INFO:Uploading model into container now
2024-07-24 21:03:15,654:INFO:_master_model_container: 11
2024-07-24 21:03:15,654:INFO:_display_container: 2
2024-07-24 21:03:15,654:INFO:KNeighborsRegressor(n_jobs=-1)
2024-07-24 21:03:15,654:INFO:create_model() successfully completed......................................
2024-07-24 21:03:15,702:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:15,702:INFO:Creating metrics dataframe
2024-07-24 21:03:15,703:INFO:Initializing Decision Tree Regressor
2024-07-24 21:03:15,703:INFO:Total runtime is 0.13146233161290485 minutes
2024-07-24 21:03:15,703:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:15,703:INFO:Initializing create_model()
2024-07-24 21:03:15,703:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:15,703:INFO:Checking exceptions
2024-07-24 21:03:15,703:INFO:Importing libraries
2024-07-24 21:03:15,703:INFO:Copying training dataset
2024-07-24 21:03:15,705:INFO:Defining folds
2024-07-24 21:03:15,705:INFO:Declaring metric variables
2024-07-24 21:03:15,705:INFO:Importing untrained model
2024-07-24 21:03:15,705:INFO:Decision Tree Regressor Imported successfully
2024-07-24 21:03:15,705:INFO:Starting cross validation
2024-07-24 21:03:15,706:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:16,270:INFO:Calculating mean and std
2024-07-24 21:03:16,270:INFO:Creating metrics dataframe
2024-07-24 21:03:16,271:INFO:Uploading results into container
2024-07-24 21:03:16,271:INFO:Uploading model into container now
2024-07-24 21:03:16,271:INFO:_master_model_container: 12
2024-07-24 21:03:16,271:INFO:_display_container: 2
2024-07-24 21:03:16,271:INFO:DecisionTreeRegressor(random_state=9)
2024-07-24 21:03:16,271:INFO:create_model() successfully completed......................................
2024-07-24 21:03:16,319:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:16,319:INFO:Creating metrics dataframe
2024-07-24 21:03:16,320:INFO:Initializing Random Forest Regressor
2024-07-24 21:03:16,320:INFO:Total runtime is 0.1417486508687337 minutes
2024-07-24 21:03:16,321:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:16,321:INFO:Initializing create_model()
2024-07-24 21:03:16,321:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:16,321:INFO:Checking exceptions
2024-07-24 21:03:16,321:INFO:Importing libraries
2024-07-24 21:03:16,321:INFO:Copying training dataset
2024-07-24 21:03:16,322:INFO:Defining folds
2024-07-24 21:03:16,322:INFO:Declaring metric variables
2024-07-24 21:03:16,322:INFO:Importing untrained model
2024-07-24 21:03:16,322:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:03:16,322:INFO:Starting cross validation
2024-07-24 21:03:16,323:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:17,378:INFO:Calculating mean and std
2024-07-24 21:03:17,378:INFO:Creating metrics dataframe
2024-07-24 21:03:17,379:INFO:Uploading results into container
2024-07-24 21:03:17,379:INFO:Uploading model into container now
2024-07-24 21:03:17,379:INFO:_master_model_container: 13
2024-07-24 21:03:17,379:INFO:_display_container: 2
2024-07-24 21:03:17,379:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:17,379:INFO:create_model() successfully completed......................................
2024-07-24 21:03:17,428:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:17,428:INFO:Creating metrics dataframe
2024-07-24 21:03:17,429:INFO:Initializing Extra Trees Regressor
2024-07-24 21:03:17,429:INFO:Total runtime is 0.16023071606953937 minutes
2024-07-24 21:03:17,429:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:17,430:INFO:Initializing create_model()
2024-07-24 21:03:17,430:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:17,430:INFO:Checking exceptions
2024-07-24 21:03:17,430:INFO:Importing libraries
2024-07-24 21:03:17,430:INFO:Copying training dataset
2024-07-24 21:03:17,431:INFO:Defining folds
2024-07-24 21:03:17,431:INFO:Declaring metric variables
2024-07-24 21:03:17,431:INFO:Importing untrained model
2024-07-24 21:03:17,431:INFO:Extra Trees Regressor Imported successfully
2024-07-24 21:03:17,431:INFO:Starting cross validation
2024-07-24 21:03:17,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:18,392:INFO:Calculating mean and std
2024-07-24 21:03:18,392:INFO:Creating metrics dataframe
2024-07-24 21:03:18,393:INFO:Uploading results into container
2024-07-24 21:03:18,393:INFO:Uploading model into container now
2024-07-24 21:03:18,393:INFO:_master_model_container: 14
2024-07-24 21:03:18,393:INFO:_display_container: 2
2024-07-24 21:03:18,394:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:18,394:INFO:create_model() successfully completed......................................
2024-07-24 21:03:18,442:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:18,442:INFO:Creating metrics dataframe
2024-07-24 21:03:18,443:INFO:Initializing AdaBoost Regressor
2024-07-24 21:03:18,443:INFO:Total runtime is 0.1771215478579203 minutes
2024-07-24 21:03:18,443:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:18,443:INFO:Initializing create_model()
2024-07-24 21:03:18,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:18,443:INFO:Checking exceptions
2024-07-24 21:03:18,443:INFO:Importing libraries
2024-07-24 21:03:18,443:INFO:Copying training dataset
2024-07-24 21:03:18,444:INFO:Defining folds
2024-07-24 21:03:18,444:INFO:Declaring metric variables
2024-07-24 21:03:18,444:INFO:Importing untrained model
2024-07-24 21:03:18,444:INFO:AdaBoost Regressor Imported successfully
2024-07-24 21:03:18,444:INFO:Starting cross validation
2024-07-24 21:03:18,445:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:19,092:INFO:Calculating mean and std
2024-07-24 21:03:19,092:INFO:Creating metrics dataframe
2024-07-24 21:03:19,093:INFO:Uploading results into container
2024-07-24 21:03:19,093:INFO:Uploading model into container now
2024-07-24 21:03:19,093:INFO:_master_model_container: 15
2024-07-24 21:03:19,093:INFO:_display_container: 2
2024-07-24 21:03:19,094:INFO:AdaBoostRegressor(random_state=9)
2024-07-24 21:03:19,094:INFO:create_model() successfully completed......................................
2024-07-24 21:03:19,142:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:19,142:INFO:Creating metrics dataframe
2024-07-24 21:03:19,143:INFO:Initializing Gradient Boosting Regressor
2024-07-24 21:03:19,143:INFO:Total runtime is 0.18879626592000323 minutes
2024-07-24 21:03:19,143:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:19,143:INFO:Initializing create_model()
2024-07-24 21:03:19,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:19,143:INFO:Checking exceptions
2024-07-24 21:03:19,143:INFO:Importing libraries
2024-07-24 21:03:19,144:INFO:Copying training dataset
2024-07-24 21:03:19,145:INFO:Defining folds
2024-07-24 21:03:19,145:INFO:Declaring metric variables
2024-07-24 21:03:19,145:INFO:Importing untrained model
2024-07-24 21:03:19,145:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:03:19,145:INFO:Starting cross validation
2024-07-24 21:03:19,146:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:20,022:INFO:Calculating mean and std
2024-07-24 21:03:20,023:INFO:Creating metrics dataframe
2024-07-24 21:03:20,023:INFO:Uploading results into container
2024-07-24 21:03:20,024:INFO:Uploading model into container now
2024-07-24 21:03:20,024:INFO:_master_model_container: 16
2024-07-24 21:03:20,024:INFO:_display_container: 2
2024-07-24 21:03:20,024:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:03:20,024:INFO:create_model() successfully completed......................................
2024-07-24 21:03:20,073:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:20,073:INFO:Creating metrics dataframe
2024-07-24 21:03:20,074:INFO:Initializing Extreme Gradient Boosting
2024-07-24 21:03:20,074:INFO:Total runtime is 0.20430446465810137 minutes
2024-07-24 21:03:20,074:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:20,074:INFO:Initializing create_model()
2024-07-24 21:03:20,074:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:20,074:INFO:Checking exceptions
2024-07-24 21:03:20,074:INFO:Importing libraries
2024-07-24 21:03:20,074:INFO:Copying training dataset
2024-07-24 21:03:20,075:INFO:Defining folds
2024-07-24 21:03:20,075:INFO:Declaring metric variables
2024-07-24 21:03:20,075:INFO:Importing untrained model
2024-07-24 21:03:20,075:INFO:Extreme Gradient Boosting Imported successfully
2024-07-24 21:03:20,075:INFO:Starting cross validation
2024-07-24 21:03:20,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:20,977:INFO:Calculating mean and std
2024-07-24 21:03:20,978:INFO:Creating metrics dataframe
2024-07-24 21:03:20,979:INFO:Uploading results into container
2024-07-24 21:03:20,979:INFO:Uploading model into container now
2024-07-24 21:03:20,979:INFO:_master_model_container: 17
2024-07-24 21:03:20,979:INFO:_display_container: 2
2024-07-24 21:03:20,980:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=9, ...)
2024-07-24 21:03:20,980:INFO:create_model() successfully completed......................................
2024-07-24 21:03:21,028:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:21,028:INFO:Creating metrics dataframe
2024-07-24 21:03:21,029:INFO:Initializing Light Gradient Boosting Machine
2024-07-24 21:03:21,029:INFO:Total runtime is 0.22022368510564166 minutes
2024-07-24 21:03:21,029:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:21,029:INFO:Initializing create_model()
2024-07-24 21:03:21,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:21,029:INFO:Checking exceptions
2024-07-24 21:03:21,029:INFO:Importing libraries
2024-07-24 21:03:21,029:INFO:Copying training dataset
2024-07-24 21:03:21,030:INFO:Defining folds
2024-07-24 21:03:21,030:INFO:Declaring metric variables
2024-07-24 21:03:21,030:INFO:Importing untrained model
2024-07-24 21:03:21,030:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-24 21:03:21,031:INFO:Starting cross validation
2024-07-24 21:03:21,031:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:23,821:INFO:Calculating mean and std
2024-07-24 21:03:23,822:INFO:Creating metrics dataframe
2024-07-24 21:03:23,822:INFO:Uploading results into container
2024-07-24 21:03:23,822:INFO:Uploading model into container now
2024-07-24 21:03:23,822:INFO:_master_model_container: 18
2024-07-24 21:03:23,823:INFO:_display_container: 2
2024-07-24 21:03:23,823:INFO:LGBMRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:23,823:INFO:create_model() successfully completed......................................
2024-07-24 21:03:23,871:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:23,871:INFO:Creating metrics dataframe
2024-07-24 21:03:23,872:INFO:Initializing Dummy Regressor
2024-07-24 21:03:23,872:INFO:Total runtime is 0.26761353413263955 minutes
2024-07-24 21:03:23,872:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:23,872:INFO:Initializing create_model()
2024-07-24 21:03:23,873:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1621ae1d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:23,873:INFO:Checking exceptions
2024-07-24 21:03:23,873:INFO:Importing libraries
2024-07-24 21:03:23,873:INFO:Copying training dataset
2024-07-24 21:03:23,874:INFO:Defining folds
2024-07-24 21:03:23,874:INFO:Declaring metric variables
2024-07-24 21:03:23,874:INFO:Importing untrained model
2024-07-24 21:03:23,874:INFO:Dummy Regressor Imported successfully
2024-07-24 21:03:23,874:INFO:Starting cross validation
2024-07-24 21:03:23,875:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:24,426:INFO:Calculating mean and std
2024-07-24 21:03:24,426:INFO:Creating metrics dataframe
2024-07-24 21:03:24,426:INFO:Uploading results into container
2024-07-24 21:03:24,427:INFO:Uploading model into container now
2024-07-24 21:03:24,427:INFO:_master_model_container: 19
2024-07-24 21:03:24,427:INFO:_display_container: 2
2024-07-24 21:03:24,427:INFO:DummyRegressor()
2024-07-24 21:03:24,427:INFO:create_model() successfully completed......................................
2024-07-24 21:03:24,475:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:24,475:INFO:Creating metrics dataframe
2024-07-24 21:03:24,476:WARNING:/opt/anaconda3/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-07-24 21:03:24,476:INFO:Initializing create_model()
2024-07-24 21:03:24,477:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:24,477:INFO:Checking exceptions
2024-07-24 21:03:24,477:INFO:Importing libraries
2024-07-24 21:03:24,477:INFO:Copying training dataset
2024-07-24 21:03:24,478:INFO:Defining folds
2024-07-24 21:03:24,478:INFO:Declaring metric variables
2024-07-24 21:03:24,478:INFO:Importing untrained model
2024-07-24 21:03:24,478:INFO:Declaring custom model
2024-07-24 21:03:24,478:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:03:24,479:INFO:Cross validation set to False
2024-07-24 21:03:24,479:INFO:Fitting Model
2024-07-24 21:03:24,775:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:24,776:INFO:create_model() successfully completed......................................
2024-07-24 21:03:24,823:INFO:Initializing create_model()
2024-07-24 21:03:24,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:24,823:INFO:Checking exceptions
2024-07-24 21:03:24,823:INFO:Importing libraries
2024-07-24 21:03:24,823:INFO:Copying training dataset
2024-07-24 21:03:24,824:INFO:Defining folds
2024-07-24 21:03:24,824:INFO:Declaring metric variables
2024-07-24 21:03:24,824:INFO:Importing untrained model
2024-07-24 21:03:24,824:INFO:Declaring custom model
2024-07-24 21:03:24,824:INFO:Extra Trees Regressor Imported successfully
2024-07-24 21:03:24,825:INFO:Cross validation set to False
2024-07-24 21:03:24,825:INFO:Fitting Model
2024-07-24 21:03:25,097:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:25,098:INFO:create_model() successfully completed......................................
2024-07-24 21:03:25,145:INFO:Initializing create_model()
2024-07-24 21:03:25,145:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:25,145:INFO:Checking exceptions
2024-07-24 21:03:25,145:INFO:Importing libraries
2024-07-24 21:03:25,145:INFO:Copying training dataset
2024-07-24 21:03:25,146:INFO:Defining folds
2024-07-24 21:03:25,147:INFO:Declaring metric variables
2024-07-24 21:03:25,147:INFO:Importing untrained model
2024-07-24 21:03:25,147:INFO:Declaring custom model
2024-07-24 21:03:25,147:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:03:25,148:INFO:Cross validation set to False
2024-07-24 21:03:25,148:INFO:Fitting Model
2024-07-24 21:03:25,480:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:03:25,480:INFO:create_model() successfully completed......................................
2024-07-24 21:03:25,531:INFO:_master_model_container: 19
2024-07-24 21:03:25,531:INFO:_display_container: 2
2024-07-24 21:03:25,531:INFO:[RandomForestRegressor(n_jobs=-1, random_state=9), ExtraTreesRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)]
2024-07-24 21:03:25,531:INFO:compare_models() successfully completed......................................
2024-07-24 21:03:25,531:INFO:Initializing stack_models()
2024-07-24 21:03:25,531:INFO:stack_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator_list=[RandomForestRegressor(n_jobs=-1, random_state=9), ExtraTreesRegressor(n_jobs=-1, random_state=9), GradientBoostingRegressor(random_state=9)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=False, choose_better=True, optimize=R2, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2024-07-24 21:03:25,531:INFO:Checking exceptions
2024-07-24 21:03:25,532:INFO:Defining meta model
2024-07-24 21:03:25,532:INFO:Getting model names
2024-07-24 21:03:25,532:INFO:[('Random Forest Regressor', RandomForestRegressor(n_jobs=-1, random_state=9)), ('Extra Trees Regressor', ExtraTreesRegressor(n_jobs=-1, random_state=9)), ('Gradient Boosting Regressor', GradientBoostingRegressor(random_state=9))]
2024-07-24 21:03:25,533:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:25,535:INFO:Initializing create_model()
2024-07-24 21:03:25,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x162ab1ad0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:25,535:INFO:Checking exceptions
2024-07-24 21:03:25,535:INFO:Importing libraries
2024-07-24 21:03:25,535:INFO:Copying training dataset
2024-07-24 21:03:25,536:INFO:Defining folds
2024-07-24 21:03:25,536:INFO:Declaring metric variables
2024-07-24 21:03:25,536:INFO:Importing untrained model
2024-07-24 21:03:25,536:INFO:Declaring custom model
2024-07-24 21:03:25,537:INFO:Stacking Regressor Imported successfully
2024-07-24 21:03:25,537:INFO:Starting cross validation
2024-07-24 21:03:25,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:32,794:INFO:Calculating mean and std
2024-07-24 21:03:32,794:INFO:Creating metrics dataframe
2024-07-24 21:03:32,795:INFO:Finalizing model
2024-07-24 21:03:34,007:INFO:Uploading results into container
2024-07-24 21:03:34,008:INFO:Uploading model into container now
2024-07-24 21:03:34,008:INFO:_master_model_container: 20
2024-07-24 21:03:34,008:INFO:_display_container: 3
2024-07-24 21:03:34,011:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-07-24 21:03:34,011:INFO:create_model() successfully completed......................................
2024-07-24 21:03:34,066:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:34,066:INFO:choose_better activated
2024-07-24 21:03:34,068:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) result for R2 is 0.5659
2024-07-24 21:03:34,068:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:34,068:INFO:Initializing create_model()
2024-07-24 21:03:34,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=RandomForestRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:34,068:INFO:Checking exceptions
2024-07-24 21:03:34,068:INFO:Importing libraries
2024-07-24 21:03:34,068:INFO:Copying training dataset
2024-07-24 21:03:34,070:INFO:Defining folds
2024-07-24 21:03:34,070:INFO:Declaring metric variables
2024-07-24 21:03:34,070:INFO:Importing untrained model
2024-07-24 21:03:34,070:INFO:Declaring custom model
2024-07-24 21:03:34,070:INFO:Random Forest Regressor Imported successfully
2024-07-24 21:03:34,070:INFO:Starting cross validation
2024-07-24 21:03:34,071:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:35,164:INFO:Calculating mean and std
2024-07-24 21:03:35,164:INFO:Creating metrics dataframe
2024-07-24 21:03:35,165:INFO:Finalizing model
2024-07-24 21:03:35,464:INFO:Uploading results into container
2024-07-24 21:03:35,465:INFO:Uploading model into container now
2024-07-24 21:03:35,465:INFO:_master_model_container: 21
2024-07-24 21:03:35,465:INFO:_display_container: 4
2024-07-24 21:03:35,465:INFO:RandomForestRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:35,465:INFO:create_model() successfully completed......................................
2024-07-24 21:03:35,513:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:35,513:INFO:RandomForestRegressor(n_jobs=-1, random_state=9) result for R2 is 0.549
2024-07-24 21:03:35,513:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:35,513:INFO:Initializing create_model()
2024-07-24 21:03:35,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:35,513:INFO:Checking exceptions
2024-07-24 21:03:35,514:INFO:Importing libraries
2024-07-24 21:03:35,514:INFO:Copying training dataset
2024-07-24 21:03:35,515:INFO:Defining folds
2024-07-24 21:03:35,515:INFO:Declaring metric variables
2024-07-24 21:03:35,515:INFO:Importing untrained model
2024-07-24 21:03:35,515:INFO:Declaring custom model
2024-07-24 21:03:35,515:INFO:Extra Trees Regressor Imported successfully
2024-07-24 21:03:35,515:INFO:Starting cross validation
2024-07-24 21:03:35,516:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:36,491:INFO:Calculating mean and std
2024-07-24 21:03:36,491:INFO:Creating metrics dataframe
2024-07-24 21:03:36,492:INFO:Finalizing model
2024-07-24 21:03:36,763:INFO:Uploading results into container
2024-07-24 21:03:36,763:INFO:Uploading model into container now
2024-07-24 21:03:36,763:INFO:_master_model_container: 22
2024-07-24 21:03:36,763:INFO:_display_container: 4
2024-07-24 21:03:36,763:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9)
2024-07-24 21:03:36,763:INFO:create_model() successfully completed......................................
2024-07-24 21:03:36,812:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:36,812:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=9) result for R2 is 0.5452
2024-07-24 21:03:36,812:INFO:SubProcess create_model() called ==================================
2024-07-24 21:03:36,812:INFO:Initializing create_model()
2024-07-24 21:03:36,812:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15098d710>, estimator=GradientBoostingRegressor(random_state=9), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-24 21:03:36,812:INFO:Checking exceptions
2024-07-24 21:03:36,812:INFO:Importing libraries
2024-07-24 21:03:36,812:INFO:Copying training dataset
2024-07-24 21:03:36,813:INFO:Defining folds
2024-07-24 21:03:36,813:INFO:Declaring metric variables
2024-07-24 21:03:36,814:INFO:Importing untrained model
2024-07-24 21:03:36,814:INFO:Declaring custom model
2024-07-24 21:03:36,814:INFO:Gradient Boosting Regressor Imported successfully
2024-07-24 21:03:36,814:INFO:Starting cross validation
2024-07-24 21:03:36,815:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-24 21:03:37,647:INFO:Calculating mean and std
2024-07-24 21:03:37,647:INFO:Creating metrics dataframe
2024-07-24 21:03:37,648:INFO:Finalizing model
2024-07-24 21:03:37,979:INFO:Uploading results into container
2024-07-24 21:03:37,979:INFO:Uploading model into container now
2024-07-24 21:03:37,979:INFO:_master_model_container: 23
2024-07-24 21:03:37,979:INFO:_display_container: 4
2024-07-24 21:03:37,979:INFO:GradientBoostingRegressor(random_state=9)
2024-07-24 21:03:37,979:INFO:create_model() successfully completed......................................
2024-07-24 21:03:38,029:INFO:SubProcess create_model() end ==================================
2024-07-24 21:03:38,029:INFO:GradientBoostingRegressor(random_state=9) result for R2 is 0.5266
2024-07-24 21:03:38,031:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1) is best model
2024-07-24 21:03:38,031:INFO:choose_better completed
2024-07-24 21:03:38,033:INFO:_master_model_container: 23
2024-07-24 21:03:38,033:INFO:_display_container: 3
2024-07-24 21:03:38,035:INFO:StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1)
2024-07-24 21:03:38,035:INFO:stack_models() successfully completed......................................
2024-07-24 21:03:38,092:INFO:Initializing save_model()
2024-07-24 21:03:38,092:INFO:save_model(model=StackingRegressor(cv=5,
                  estimators=[('Random Forest Regressor',
                               RandomForestRegressor(n_jobs=-1,
                                                     random_state=9)),
                              ('Extra Trees Regressor',
                               ExtraTreesRegressor(n_jobs=-1, random_state=9)),
                              ('Gradient Boosting Regressor',
                               GradientBoostingRegressor(random_state=9))],
                  final_estimator=LinearRegression(n_jobs=-1), n_jobs=-1), model_name=best_model_large_house, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/gp/fp0z7sz5063d4vng25fzsxcm0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(stra...
                ('polynomial_features',
                 TransformerWrapper(transformer=PolynomialFeatures(include_bias=False))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-07-24 21:03:38,092:INFO:Adding model into prep_pipe
2024-07-24 21:03:38,122:INFO:best_model_large_house.pkl saved in current working directory
2024-07-24 21:03:38,135:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))])
2024-07-24 21:03:38,135:INFO:save_model() successfully completed......................................
2024-07-24 21:28:45,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:28:45,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:28:45,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:28:45,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:28:45,352:INFO:Initializing load_model()
2024-07-24 21:28:45,352:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:28:45,627:INFO:Initializing load_model()
2024-07-24 21:28:45,627:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:28:45,672:INFO:Initializing predict_model()
2024-07-24 21:28:45,672:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1437b0590>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1246ba840>)
2024-07-24 21:28:45,672:INFO:Checking exceptions
2024-07-24 21:28:45,672:INFO:Preloading libraries
2024-07-24 21:28:45,672:INFO:Set up data.
2024-07-24 21:28:45,674:INFO:Set up index.
2024-07-24 21:29:58,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:29:58,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:29:58,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:29:58,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:29:58,991:INFO:Initializing load_model()
2024-07-24 21:29:58,991:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:29:59,184:INFO:Initializing load_model()
2024-07-24 21:29:59,184:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:29:59,225:INFO:Initializing predict_model()
2024-07-24 21:29:59,225:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x150bb2d50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1317ba840>)
2024-07-24 21:29:59,225:INFO:Checking exceptions
2024-07-24 21:29:59,225:INFO:Preloading libraries
2024-07-24 21:29:59,225:INFO:Set up data.
2024-07-24 21:29:59,227:INFO:Set up index.
2024-07-24 21:31:03,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:03,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:03,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:03,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:03,440:INFO:Initializing load_model()
2024-07-24 21:31:03,440:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:03,637:INFO:Initializing load_model()
2024-07-24 21:31:03,637:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:03,676:INFO:Initializing predict_model()
2024-07-24 21:31:03,676:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16deb0610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1600ba840>)
2024-07-24 21:31:03,676:INFO:Checking exceptions
2024-07-24 21:31:03,676:INFO:Preloading libraries
2024-07-24 21:31:03,676:INFO:Set up data.
2024-07-24 21:31:03,678:INFO:Set up index.
2024-07-24 21:31:18,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:18,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:18,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:18,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:18,978:INFO:Initializing load_model()
2024-07-24 21:31:18,978:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:19,170:INFO:Initializing load_model()
2024-07-24 21:31:19,171:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:19,210:INFO:Initializing predict_model()
2024-07-24 21:31:19,210:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x170ab2890>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x130aba840>)
2024-07-24 21:31:19,210:INFO:Checking exceptions
2024-07-24 21:31:19,211:INFO:Preloading libraries
2024-07-24 21:31:19,211:INFO:Set up data.
2024-07-24 21:31:19,213:INFO:Set up index.
2024-07-24 21:31:29,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:29,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:29,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:29,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:29,597:INFO:Initializing load_model()
2024-07-24 21:31:29,597:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:29,790:INFO:Initializing load_model()
2024-07-24 21:31:29,790:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:29,830:INFO:Initializing predict_model()
2024-07-24 21:31:29,830:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16cfb2450>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x127cba840>)
2024-07-24 21:31:29,830:INFO:Checking exceptions
2024-07-24 21:31:29,830:INFO:Preloading libraries
2024-07-24 21:31:29,830:INFO:Set up data.
2024-07-24 21:31:29,833:INFO:Set up index.
2024-07-24 21:31:46,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:46,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:46,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:46,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 21:31:46,351:INFO:Initializing load_model()
2024-07-24 21:31:46,351:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:46,545:INFO:Initializing load_model()
2024-07-24 21:31:46,545:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 21:31:46,585:INFO:Initializing predict_model()
2024-07-24 21:31:46,585:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x172bb26d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1538ba840>)
2024-07-24 21:31:46,585:INFO:Checking exceptions
2024-07-24 21:31:46,585:INFO:Preloading libraries
2024-07-24 21:31:46,585:INFO:Set up data.
2024-07-24 21:31:46,587:INFO:Set up index.
2024-07-24 23:04:42,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:04:42,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:04:42,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:04:42,491:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:04:42,630:INFO:Initializing load_model()
2024-07-24 23:04:42,630:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:04:42,891:INFO:Initializing load_model()
2024-07-24 23:04:42,891:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:04:42,933:INFO:Initializing predict_model()
2024-07-24 23:04:42,933:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14dcb0250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1361ba840>)
2024-07-24 23:04:42,933:INFO:Checking exceptions
2024-07-24 23:04:42,933:INFO:Preloading libraries
2024-07-24 23:04:42,933:INFO:Set up data.
2024-07-24 23:04:42,935:INFO:Set up index.
2024-07-24 23:07:20,524:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:20,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:20,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:20,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:20,671:INFO:Initializing load_model()
2024-07-24 23:07:20,671:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:20,919:INFO:Initializing load_model()
2024-07-24 23:07:20,919:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:20,961:INFO:Initializing predict_model()
2024-07-24 23:07:20,961:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1456b0290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1252ba840>)
2024-07-24 23:07:20,961:INFO:Checking exceptions
2024-07-24 23:07:20,961:INFO:Preloading libraries
2024-07-24 23:07:20,962:INFO:Set up data.
2024-07-24 23:07:20,964:INFO:Set up index.
2024-07-24 23:07:42,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:42,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:42,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:42,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:42,693:INFO:Initializing load_model()
2024-07-24 23:07:42,693:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:42,931:INFO:Initializing load_model()
2024-07-24 23:07:42,931:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:42,979:INFO:Initializing predict_model()
2024-07-24 23:07:42,979:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1731b01d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x163dba840>)
2024-07-24 23:07:42,979:INFO:Checking exceptions
2024-07-24 23:07:42,979:INFO:Preloading libraries
2024-07-24 23:07:42,979:INFO:Set up data.
2024-07-24 23:07:42,981:INFO:Set up index.
2024-07-24 23:07:59,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:59,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:59,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:59,010:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:07:59,090:INFO:Initializing load_model()
2024-07-24 23:07:59,090:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:59,283:INFO:Initializing load_model()
2024-07-24 23:07:59,283:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:07:59,323:INFO:Initializing predict_model()
2024-07-24 23:07:59,323:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16d1b0290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12f3ba840>)
2024-07-24 23:07:59,323:INFO:Checking exceptions
2024-07-24 23:07:59,323:INFO:Preloading libraries
2024-07-24 23:07:59,323:INFO:Set up data.
2024-07-24 23:07:59,326:INFO:Set up index.
2024-07-24 23:08:15,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:15,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:15,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:15,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:15,125:INFO:Initializing load_model()
2024-07-24 23:08:15,125:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:15,318:INFO:Initializing load_model()
2024-07-24 23:08:15,318:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:15,358:INFO:Initializing predict_model()
2024-07-24 23:08:15,358:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1650b0050>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13f2ba840>)
2024-07-24 23:08:15,358:INFO:Checking exceptions
2024-07-24 23:08:15,358:INFO:Preloading libraries
2024-07-24 23:08:15,358:INFO:Set up data.
2024-07-24 23:08:15,361:INFO:Set up index.
2024-07-24 23:08:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:34,430:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:34,510:INFO:Initializing load_model()
2024-07-24 23:08:34,510:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:34,700:INFO:Initializing load_model()
2024-07-24 23:08:34,700:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:34,745:INFO:Initializing predict_model()
2024-07-24 23:08:34,745:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13c0eaa10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11e1ba840>)
2024-07-24 23:08:34,745:INFO:Checking exceptions
2024-07-24 23:08:34,745:INFO:Preloading libraries
2024-07-24 23:08:34,745:INFO:Set up data.
2024-07-24 23:08:34,747:INFO:Set up index.
2024-07-24 23:08:58,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:58,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:58,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:58,999:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-24 23:08:59,080:INFO:Initializing load_model()
2024-07-24 23:08:59,080:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:59,276:INFO:Initializing load_model()
2024-07-24 23:08:59,276:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-24 23:08:59,318:INFO:Initializing predict_model()
2024-07-24 23:08:59,318:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14f6b2d90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x138cba840>)
2024-07-24 23:08:59,318:INFO:Checking exceptions
2024-07-24 23:08:59,318:INFO:Preloading libraries
2024-07-24 23:08:59,318:INFO:Set up data.
2024-07-24 23:08:59,320:INFO:Set up index.
2024-07-25 08:14:52,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:14:52,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:14:52,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:14:52,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:14:52,797:INFO:Initializing load_model()
2024-07-25 08:14:52,797:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:14:53,070:INFO:Initializing load_model()
2024-07-25 08:14:53,070:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:14:53,114:INFO:Initializing predict_model()
2024-07-25 08:14:53,114:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1511b04d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1276ba840>)
2024-07-25 08:14:53,114:INFO:Checking exceptions
2024-07-25 08:14:53,114:INFO:Preloading libraries
2024-07-25 08:14:53,114:INFO:Set up data.
2024-07-25 08:14:53,116:INFO:Set up index.
2024-07-25 08:15:04,742:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:04,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:04,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:04,743:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:04,823:INFO:Initializing load_model()
2024-07-25 08:15:04,823:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:05,018:INFO:Initializing load_model()
2024-07-25 08:15:05,018:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:05,069:INFO:Initializing predict_model()
2024-07-25 08:15:05,069:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1723b0290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x132fba840>)
2024-07-25 08:15:05,069:INFO:Checking exceptions
2024-07-25 08:15:05,069:INFO:Preloading libraries
2024-07-25 08:15:05,070:INFO:Set up data.
2024-07-25 08:15:05,072:INFO:Set up index.
2024-07-25 08:15:19,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:19,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:19,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:19,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:19,453:INFO:Initializing load_model()
2024-07-25 08:15:19,453:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:19,645:INFO:Initializing load_model()
2024-07-25 08:15:19,645:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:19,684:INFO:Initializing predict_model()
2024-07-25 08:15:19,684:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1650b0310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x13fbba840>)
2024-07-25 08:15:19,684:INFO:Checking exceptions
2024-07-25 08:15:19,684:INFO:Preloading libraries
2024-07-25 08:15:19,685:INFO:Set up data.
2024-07-25 08:15:19,687:INFO:Set up index.
2024-07-25 08:15:42,337:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:42,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:42,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:42,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:15:42,456:INFO:Initializing load_model()
2024-07-25 08:15:42,456:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:42,703:INFO:Initializing load_model()
2024-07-25 08:15:42,703:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:15:42,746:INFO:Initializing predict_model()
2024-07-25 08:15:42,746:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1473b0190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1309ba840>)
2024-07-25 08:15:42,746:INFO:Checking exceptions
2024-07-25 08:15:42,746:INFO:Preloading libraries
2024-07-25 08:15:42,746:INFO:Set up data.
2024-07-25 08:15:42,749:INFO:Set up index.
2024-07-25 08:21:38,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:21:38,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:21:38,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:21:38,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:21:38,575:INFO:Initializing load_model()
2024-07-25 08:21:38,575:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:21:38,822:INFO:Initializing load_model()
2024-07-25 08:21:38,822:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:21:38,865:INFO:Initializing predict_model()
2024-07-25 08:21:38,865:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x132eb05d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11acce840>)
2024-07-25 08:21:38,865:INFO:Checking exceptions
2024-07-25 08:21:38,865:INFO:Preloading libraries
2024-07-25 08:21:38,865:INFO:Set up data.
2024-07-25 08:21:38,867:INFO:Set up index.
2024-07-25 08:22:02,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:22:02,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:22:02,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:22:02,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:22:02,358:INFO:Initializing load_model()
2024-07-25 08:22:02,358:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:22:02,547:INFO:Initializing load_model()
2024-07-25 08:22:02,547:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:22:02,760:INFO:Initializing predict_model()
2024-07-25 08:22:02,761:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x13ecb0090>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11efba840>)
2024-07-25 08:22:02,761:INFO:Checking exceptions
2024-07-25 08:22:02,761:INFO:Preloading libraries
2024-07-25 08:22:02,761:INFO:Set up data.
2024-07-25 08:22:02,768:INFO:Set up index.
2024-07-25 08:23:42,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:23:42,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:23:42,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:23:42,277:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:23:42,422:INFO:Initializing load_model()
2024-07-25 08:23:42,422:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:23:42,695:INFO:Initializing load_model()
2024-07-25 08:23:42,695:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:23:42,737:INFO:Initializing predict_model()
2024-07-25 08:23:42,737:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1614b0350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1319ba840>)
2024-07-25 08:23:42,737:INFO:Checking exceptions
2024-07-25 08:23:42,737:INFO:Preloading libraries
2024-07-25 08:23:42,737:INFO:Set up data.
2024-07-25 08:23:42,739:INFO:Set up index.
2024-07-25 08:24:44,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:24:44,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:24:44,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:24:44,559:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:24:44,638:INFO:Initializing load_model()
2024-07-25 08:24:44,638:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:24:44,829:INFO:Initializing load_model()
2024-07-25 08:24:44,829:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:24:44,868:INFO:Initializing predict_model()
2024-07-25 08:24:44,868:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16dcb08d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1360ba840>)
2024-07-25 08:24:44,868:INFO:Checking exceptions
2024-07-25 08:24:44,868:INFO:Preloading libraries
2024-07-25 08:24:44,868:INFO:Set up data.
2024-07-25 08:24:44,870:INFO:Set up index.
2024-07-25 08:27:03,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:27:03,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:27:03,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:27:03,520:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:27:03,678:INFO:Initializing load_model()
2024-07-25 08:27:03,678:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:27:04,034:INFO:Initializing load_model()
2024-07-25 08:27:04,034:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:27:04,174:INFO:Initializing predict_model()
2024-07-25 08:27:04,174:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16fcb27d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x145aba840>)
2024-07-25 08:27:04,174:INFO:Checking exceptions
2024-07-25 08:27:04,174:INFO:Preloading libraries
2024-07-25 08:27:04,175:INFO:Set up data.
2024-07-25 08:27:04,220:INFO:Set up index.
2024-07-25 08:28:49,610:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:28:49,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:28:49,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:28:49,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 08:28:49,764:INFO:Initializing load_model()
2024-07-25 08:28:49,764:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:28:50,073:INFO:Initializing load_model()
2024-07-25 08:28:50,073:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 08:28:50,135:INFO:Initializing predict_model()
2024-07-25 08:28:50,136:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1723b2210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1597be7a0>)
2024-07-25 08:28:50,136:INFO:Checking exceptions
2024-07-25 08:28:50,136:INFO:Preloading libraries
2024-07-25 08:28:50,136:INFO:Set up data.
2024-07-25 08:28:50,154:INFO:Set up index.
2024-07-25 10:23:32,993:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:23:32,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:23:32,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:23:32,994:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:23:33,254:INFO:Initializing load_model()
2024-07-25 10:23:33,254:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:23:33,691:INFO:Initializing load_model()
2024-07-25 10:23:33,691:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:23:33,736:INFO:Initializing predict_model()
2024-07-25 10:23:33,736:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x16d6b2610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12f8ba840>)
2024-07-25 10:23:33,736:INFO:Checking exceptions
2024-07-25 10:23:33,736:INFO:Preloading libraries
2024-07-25 10:23:33,736:INFO:Set up data.
2024-07-25 10:23:33,738:INFO:Set up index.
2024-07-25 10:24:44,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:24:44,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:24:44,018:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:24:44,019:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:24:44,136:INFO:Initializing load_model()
2024-07-25 10:24:44,136:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:24:44,396:INFO:Initializing load_model()
2024-07-25 10:24:44,396:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:24:44,438:INFO:Initializing predict_model()
2024-07-25 10:24:44,438:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1619b0550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x153aba840>)
2024-07-25 10:24:44,438:INFO:Checking exceptions
2024-07-25 10:24:44,438:INFO:Preloading libraries
2024-07-25 10:24:44,438:INFO:Set up data.
2024-07-25 10:24:44,440:INFO:Set up index.
2024-07-25 10:38:32,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:38:32,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:38:32,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:38:32,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:38:32,515:INFO:Initializing load_model()
2024-07-25 10:38:32,515:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:38:32,788:INFO:Initializing load_model()
2024-07-25 10:38:32,788:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:38:32,837:INFO:Initializing predict_model()
2024-07-25 10:38:32,837:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x1477b0110>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x1259ba840>)
2024-07-25 10:38:32,837:INFO:Checking exceptions
2024-07-25 10:38:32,837:INFO:Preloading libraries
2024-07-25 10:38:32,837:INFO:Set up data.
2024-07-25 10:38:32,839:INFO:Set up index.
2024-07-25 10:40:10,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:40:10,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:40:10,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:40:10,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 10:40:10,749:INFO:Initializing load_model()
2024-07-25 10:40:10,749:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:40:11,001:INFO:Initializing load_model()
2024-07-25 10:40:11,001:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 10:40:11,044:INFO:Initializing predict_model()
2024-07-25 10:40:11,044:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x12900e610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11e86e840>)
2024-07-25 10:40:11,044:INFO:Checking exceptions
2024-07-25 10:40:11,044:INFO:Preloading libraries
2024-07-25 10:40:11,044:INFO:Set up data.
2024-07-25 10:40:11,047:INFO:Set up index.
2024-07-25 11:25:47,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:25:47,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:25:47,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:25:47,727:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:25:47,865:INFO:Initializing load_model()
2024-07-25 11:25:47,865:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:25:48,140:INFO:Initializing load_model()
2024-07-25 11:25:48,140:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:25:48,183:INFO:Initializing predict_model()
2024-07-25 11:25:48,184:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x15fcb2990>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Extra Trees Regressor',
                                                ExtraTreesRegressor(n_jobs=-1,
                                                                    random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x12f9be7a0>)
2024-07-25 11:25:48,184:INFO:Checking exceptions
2024-07-25 11:25:48,184:INFO:Preloading libraries
2024-07-25 11:25:48,184:INFO:Set up data.
2024-07-25 11:25:48,186:INFO:Set up index.
2024-07-25 11:28:58,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:28:58,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:28:58,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:28:58,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:28:59,035:INFO:Initializing load_model()
2024-07-25 11:28:59,035:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:28:59,291:INFO:Initializing load_model()
2024-07-25 11:28:59,291:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:28:59,335:INFO:Initializing predict_model()
2024-07-25 11:28:59,335:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14ccb04d0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11aa727a0>)
2024-07-25 11:28:59,335:INFO:Checking exceptions
2024-07-25 11:28:59,335:INFO:Preloading libraries
2024-07-25 11:28:59,335:INFO:Set up data.
2024-07-25 11:28:59,337:INFO:Set up index.
2024-07-25 11:34:01,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:34:01,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:34:01,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:34:01,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-25 11:34:01,510:INFO:Initializing load_model()
2024-07-25 11:34:01,510:INFO:load_model(model_name=best_model_small_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:34:01,778:INFO:Initializing load_model()
2024-07-25 11:34:01,778:INFO:load_model(model_name=best_model_large_house, platform=None, authentication=None, verbose=True)
2024-07-25 11:34:01,822:INFO:Initializing predict_model()
2024-07-25 11:34:01,822:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x14eab0190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['rooms', 'm2', 'elevator',
                                             'garage'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['house_type', 'house_type_2',
                                             'neighbourhood', 'district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 Transformer...
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('trained_model',
                 StackingRegressor(cv=5,
                                   estimators=[('Light Gradient Boosting '
                                                'Machine',
                                                LGBMRegressor(n_jobs=-1,
                                                              random_state=9)),
                                               ('Random Forest Regressor',
                                                RandomForestRegressor(n_jobs=-1,
                                                                      random_state=9)),
                                               ('Gradient Boosting Regressor',
                                                GradientBoostingRegressor(random_state=9))],
                                   final_estimator=LinearRegression(n_jobs=-1),
                                   n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x11e9be7a0>)
2024-07-25 11:34:01,822:INFO:Checking exceptions
2024-07-25 11:34:01,822:INFO:Preloading libraries
2024-07-25 11:34:01,822:INFO:Set up data.
2024-07-25 11:34:01,824:INFO:Set up index.
